

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Dec 14 21:44:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     _PORTCbits	set	3970
    28  0000                     _TRISBbits	set	3987
    29  0000                     _TRISCbits	set	3988
    30  0000                     _TRISDbits	set	3989
    31  0000                     _LATB0	set	31824
    32  0000                     _LATB1	set	31825
    33  0000                     _LATB2	set	31826
    34  0000                     _LATB3	set	31827
    35  0000                     _LATB4	set	31828
    36  0000                     _LATB5	set	31829
    37  0000                     _LATB6	set	31830
    38  0000                     _LATB7	set	31831
    39  0000                     _LATD0	set	31840
    40  0000                     _LATD1	set	31841
    41  0000                     _LATD2	set	31842
    42  0000                     _LATD3	set	31843
    43  0000                     _LATD4	set	31844
    44  0000                     _LATD5	set	31845
    45  0000                     _LATD6	set	31846
    46  0000                     _LATD7	set	31847
    47                           
    48 ;;
    49 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    50 ;;
    51 ;; *************** function _main *****************
    52 ;; Defined at:
    53 ;;		line 57 in file "newmain.c"
    54 ;; Parameters:    Size  Location     Type
    55 ;;  argc            2   84[COMRAM] int 
    56 ;;  argv            3   86[COMRAM] PTR PTR unsigned char 
    57 ;; Auto vars:     Size  Location     Type
    58 ;;  pseudoTime      2    4[BANK0 ] int 
    59 ;;  t               1    6[BANK0 ] unsigned char 
    60 ;;  loopCount       1    3[BANK0 ] unsigned char 
    61 ;;  minLoop         1    2[BANK0 ] unsigned char 
    62 ;;  loopConstant    1    1[BANK0 ] unsigned char 
    63 ;;  divConstant     1    0[BANK0 ] unsigned char 
    64 ;; Return value:  Size  Location     Type
    65 ;;		None               void
    66 ;; Registers used:
    67 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    68 ;; Tracked objects:
    69 ;;		On entry : 0/0
    70 ;;		On exit  : 0/0
    71 ;;		Unchanged: 0/0
    72 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    73 ;;      Params:         5       0       0       0       0       0       0       0       0
    74 ;;      Locals:         0       7       0       0       0       0       0       0       0
    75 ;;      Temps:          2       0       0       0       0       0       0       0       0
    76 ;;      Totals:         7       7       0       0       0       0       0       0       0
    77 ;;Total ram usage:       14 bytes
    78 ;; Hardware stack levels required when called:    3
    79 ;; This function calls:
    80 ;;		_ControllForCrush
    81 ;;		_Draw
    82 ;;		_Init_Game
    83 ;;		_Move
    84 ;;		_PlaceFeed
    85 ;;		___awdiv
    86 ;;		___awmod
    87 ;;		___wmul
    88 ;;		_init
    89 ;;		_p321
    90 ;; This function is called by:
    91 ;;		Startup code after reset
    92 ;; This function uses a non-reentrant model
    93 ;;
    94                           
    95                           	psect	text0
    96  007CA0                     __ptext0:
    97                           	opt stack 0
    98  007CA0                     _main:
    99                           	opt stack 28
   100  007CA0                     l87:
   101                           
   102                           ;newmain.c: 60: init();
   103  007CA0  EC52  F03B         	call	_init	;wreg free
   104                           
   105                           ;newmain.c: 61: p321();
   106  007CA4  ECF5  F03C         	call	_p321	;wreg free
   107                           
   108                           ;newmain.c: 82: Init_Game();
   109  007CA8  ECF8  F037         	call	_Init_Game	;wreg free
   110                           
   111                           ;newmain.c: 84: int pseudoTime = 30;
   112  007CAC  0E00               	movlw	0
   113  007CAE  0100               	movlb	0	; () banked
   114  007CB0  6FC0               	movwf	(main@pseudoTime+1)& (0+255),b
   115  007CB2  0E1E               	movlw	30
   116  007CB4  0100               	movlb	0	; () banked
   117  007CB6  6FBF               	movwf	main@pseudoTime& (0+255),b
   118                           
   119                           ; BSR set to: 0
   120                           ;newmain.c: 85: char t;
   121                           ;newmain.c: 86: char loopConstant = 12;
   122  007CB8  0E0C               	movlw	12
   123  007CBA  0100               	movlb	0	; () banked
   124  007CBC  6FBC               	movwf	main@loopConstant& (0+255),b
   125                           
   126                           ; BSR set to: 0
   127                           ;newmain.c: 87: char minLoop = 2;
   128  007CBE  0E02               	movlw	2
   129  007CC0  0100               	movlb	0	; () banked
   130  007CC2  6FBD               	movwf	main@minLoop& (0+255),b
   131                           
   132                           ; BSR set to: 0
   133                           ;newmain.c: 88: char divConstant = 1;
   134  007CC4  0E01               	movlw	1
   135  007CC6  0100               	movlb	0	; () banked
   136  007CC8  6FBB               	movwf	main@divConstant& (0+255),b
   137                           
   138                           ; BSR set to: 0
   139                           ;newmain.c: 89: if( PORTCbits.RC6 == 1 && PORTCbits.RC7 == 1 )
   140  007CCA  BC82               	btfsc	3970,6,c	;volatile
   141                           
   142                           ; BSR set to: 0
   143  007CCC  AE82               	btfss	3970,7,c	;volatile
   144  007CCE  D005               	goto	l88
   145                           
   146                           ; BSR set to: 0
   147                           ;newmain.c: 90: {
   148                           ;newmain.c: 91: minLoop = 4;
   149  007CD0  0E04               	movlw	4
   150  007CD2  0100               	movlb	0	; () banked
   151  007CD4  6FBD               	movwf	main@minLoop& (0+255),b
   152                           
   153                           ;newmain.c: 92: loopConstant = 24;
   154  007CD6  0E18               	movlw	24
   155  007CD8  D009               	goto	L1
   156  007CDA                     l88:
   157                           
   158                           ; BSR set to: 0
   159                           ;newmain.c: 95: else if( PORTCbits.RC6 == 1 )
   160  007CDA  AC82               	btfss	3970,6,c	;volatile
   161  007CDC  D004               	goto	l90
   162                           
   163                           ; BSR set to: 0
   164                           ;newmain.c: 96: loopConstant = 16;
   165  007CDE  0E10               	movlw	16
   166  007CE0  0100               	movlb	0	; () banked
   167  007CE2  6FBC               	movwf	main@loopConstant& (0+255),b
   168  007CE4  D008               	goto	l89
   169  007CE6                     l90:
   170                           
   171                           ; BSR set to: 0
   172                           ;newmain.c: 97: else if( PORTCbits.RC7 == 1 )
   173  007CE6  AE82               	btfss	3970,7,c	;volatile
   174  007CE8  D006               	goto	l89
   175                           
   176                           ; BSR set to: 0
   177                           ;newmain.c: 98: {
   178                           ;newmain.c: 99: loopConstant = 20;
   179  007CEA  0E14               	movlw	20
   180  007CEC                     L1:
   181  007CEC  0100               	movlb	0	; () banked
   182  007CEE  6FBC               	movwf	main@loopConstant& (0+255),b
   183                           
   184                           ;newmain.c: 100: divConstant = 2;
   185  007CF0  0E02               	movlw	2
   186  007CF2  0100               	movlb	0	; () banked
   187  007CF4  6FBB               	movwf	main@divConstant& (0+255),b
   188  007CF6                     l89:
   189                           
   190                           ; BSR set to: 0
   191                           ;newmain.c: 101: }
   192                           ;newmain.c: 103: char loopCount;
   193                           ;newmain.c: 105: pseudoTime = 18;
   194  007CF6  0E00               	movlw	0
   195  007CF8  0100               	movlb	0	; () banked
   196  007CFA  6FC0               	movwf	(main@pseudoTime+1)& (0+255),b
   197  007CFC  0E12               	movlw	18
   198  007CFE  0100               	movlb	0	; () banked
   199  007D00  6FBF               	movwf	main@pseudoTime& (0+255),b
   200                           
   201                           ;newmain.c: 107: while( PlaceFeed( pseudoTime ) == 0 )
   202  007D02  D026               	goto	l1853
   203  007D04                     l1847:
   204                           
   205                           ;newmain.c: 108: {
   206                           ;newmain.c: 109: pseudoTime += ((pseudoTime % 5)+1)*9;
   207  007D04  0E00               	movlw	0
   208  007D06  6E04               	movwf	___awmod@divisor+1,c
   209  007D08  0E05               	movlw	5
   210  007D0A  6E03               	movwf	___awmod@divisor,c
   211  007D0C  C0BF  F001         	movff	main@pseudoTime,___awmod@dividend
   212  007D10  C0C0  F002         	movff	main@pseudoTime+1,___awmod@dividend+1
   213  007D14  EC24  F038         	call	___awmod	;wreg free
   214  007D18  0E01               	movlw	1
   215  007D1A  2401               	addwf	?___awmod,w,c
   216  007D1C  6E07               	movwf	___wmul@multiplier,c
   217  007D1E  0E00               	movlw	0
   218  007D20  2002               	addwfc	?___awmod+1,w,c
   219  007D22  6E08               	movwf	___wmul@multiplier+1,c
   220  007D24  0E00               	movlw	0
   221  007D26  6E0A               	movwf	___wmul@multiplicand+1,c
   222  007D28  0E09               	movlw	9
   223  007D2A  6E09               	movwf	___wmul@multiplicand,c
   224  007D2C  ECC9  F037         	call	___wmul	;wreg free
   225  007D30  5007               	movf	?___wmul,w,c
   226  007D32  0100               	movlb	0	; () banked
   227  007D34  27BF               	addwf	main@pseudoTime& (0+255),f,b
   228  007D36  5008               	movf	?___wmul+1,w,c
   229  007D38  0100               	movlb	0	; () banked
   230  007D3A  23C0               	addwfc	(main@pseudoTime+1)& (0+255),f,b
   231                           
   232                           ; BSR set to: 0
   233                           ;newmain.c: 110: pseudoTime %= 64;
   234  007D3C  0E3F               	movlw	63
   235  007D3E  0100               	movlb	0	; () banked
   236  007D40  17BF               	andwf	main@pseudoTime& (0+255),f,b
   237  007D42  0E00               	movlw	0
   238  007D44  0100               	movlb	0	; () banked
   239  007D46  17C0               	andwf	(main@pseudoTime+1)& (0+255),f,b
   240                           
   241                           ; BSR set to: 0
   242                           ;newmain.c: 111: size--;
   243  007D48  0100               	movlb	0	; () banked
   244  007D4A  07B4               	decf	_size& (0+255),f,b
   245  007D4C  A0D8               	btfss	status,0,c
   246  007D4E  07B5               	decf	(_size+1)& (0+255),f,b
   247  007D50                     l1853:
   248                           
   249                           ; BSR set to: 0
   250  007D50  C0BF  F009         	movff	main@pseudoTime,PlaceFeed@s
   251  007D54  C0C0  F00A         	movff	main@pseudoTime+1,PlaceFeed@s+1
   252  007D58  EC66  F039         	call	_PlaceFeed	;wreg free
   253  007D5C  500A               	movf	?_PlaceFeed+1,w,c
   254  007D5E  1009               	iorwf	?_PlaceFeed,w,c
   255  007D60  B4D8               	btfsc	status,2,c
   256  007D62  D7D0               	goto	l1847
   257  007D64                     l1855:
   258                           
   259                           ;newmain.c: 114: {
   260                           ;newmain.c: 115: loopCount = loopConstant-size/divConstant;
   261  007D64  C0B4  F001         	movff	_size,___awdiv@dividend
   262  007D68  C0B5  F002         	movff	_size+1,___awdiv@dividend+1
   263  007D6C  0100               	movlb	0	; () banked
   264  007D6E  C0BB  F003         	movff	main@divConstant,___awdiv@divisor
   265  007D72  6A04               	clrf	___awdiv@divisor+1,c
   266  007D74  EC6C  F038         	call	___awdiv	;wreg free
   267  007D78  5001               	movf	?___awdiv,w,c
   268  007D7A  0800               	sublw	0
   269  007D7C  0100               	movlb	0	; () banked
   270  007D7E  25BC               	addwf	main@loopConstant& (0+255),w,b
   271  007D80  0100               	movlb	0	; () banked
   272  007D82  6FBE               	movwf	main@loopCount& (0+255),b
   273                           
   274                           ; BSR set to: 0
   275                           ;newmain.c: 116: if( loopCount < minLoop )
   276  007D84  0100               	movlb	0	; () banked
   277  007D86  51BD               	movf	main@minLoop& (0+255),w,b
   278  007D88  0100               	movlb	0	; () banked
   279  007D8A  5DBE               	subwf	main@loopCount& (0+255),w,b
   280  007D8C  A0D8               	btfss	status,0,c
   281                           
   282                           ; BSR set to: 0
   283                           ;newmain.c: 117: loopCount = minLoop;
   284  007D8E  C0BD  F0BE         	movff	main@minLoop,main@loopCount
   285                           
   286                           ; BSR set to: 0
   287                           ;newmain.c: 119: for( t=0; t<loopCount; t++ )
   288                           
   289                           ; BSR set to: 0
   290  007D92  0E00               	movlw	0
   291  007D94  0100               	movlb	0	; () banked
   292  007D96  6FC1               	movwf	main@t& (0+255),b
   293  007D98  D004               	goto	l1867
   294  007D9A                     l1863:
   295                           
   296                           ; BSR set to: 0
   297                           ;newmain.c: 120: Draw();
   298  007D9A  EC02  F03C         	call	_Draw	;wreg free
   299  007D9E  0100               	movlb	0	; () banked
   300  007DA0  2BC1               	incf	main@t& (0+255),f,b
   301  007DA2                     l1867:
   302                           
   303                           ; BSR set to: 0
   304  007DA2  0100               	movlb	0	; () banked
   305  007DA4  51BE               	movf	main@loopCount& (0+255),w,b
   306  007DA6  0100               	movlb	0	; () banked
   307  007DA8  5DC1               	subwf	main@t& (0+255),w,b
   308  007DAA  A0D8               	btfss	status,0,c
   309  007DAC  D7F6               	goto	l1863
   310                           
   311                           ; BSR set to: 0
   312                           ;newmain.c: 122: if( PORTCbits.RC1 == 1 && isRButtonPressed == 0 )
   313  007DAE  A282               	btfss	3970,1,c	;volatile
   314  007DB0  D006               	goto	l1873
   315                           
   316                           ; BSR set to: 0
   317  007DB2  0100               	movlb	0	; () banked
   318  007DB4  67B9               	tstfsz	_isRButtonPressed& (0+255),b
   319  007DB6  D003               	goto	l1873
   320                           
   321                           ; BSR set to: 0
   322                           ;newmain.c: 123: isRButtonPressing = 1;
   323  007DB8  0E01               	movlw	1
   324  007DBA  0100               	movlb	0	; () banked
   325  007DBC  6FBA               	movwf	_isRButtonPressing& (0+255),b
   326  007DBE                     l1873:
   327                           
   328                           ; BSR set to: 0
   329                           ;newmain.c: 124: if( PORTCbits.RC2 == 1 && isLButtonPressed == 0 )
   330  007DBE  A482               	btfss	3970,2,c	;volatile
   331  007DC0  D006               	goto	l1879
   332                           
   333                           ; BSR set to: 0
   334  007DC2  0100               	movlb	0	; () banked
   335  007DC4  67B7               	tstfsz	_isLButtonPressed& (0+255),b
   336  007DC6  D003               	goto	l1879
   337                           
   338                           ; BSR set to: 0
   339                           ;newmain.c: 125: isLButtonPressing = 1;
   340  007DC8  0E01               	movlw	1
   341  007DCA  0100               	movlb	0	; () banked
   342  007DCC  6FB8               	movwf	_isLButtonPressing& (0+255),b
   343  007DCE                     l1879:
   344                           
   345                           ; BSR set to: 0
   346                           ;newmain.c: 127: if( isRButtonPressed == 0 && isRButtonPressing == 1 )
   347  007DCE  0100               	movlb	0	; () banked
   348  007DD0  67B9               	tstfsz	_isRButtonPressed& (0+255),b
   349  007DD2  D025               	goto	l1899
   350                           
   351                           ; BSR set to: 0
   352  007DD4  0100               	movlb	0	; () banked
   353  007DD6  05BA               	decf	_isRButtonPressing& (0+255),w,b
   354  007DD8  A4D8               	btfss	status,2,c
   355  007DDA  D021               	goto	l1899
   356                           
   357                           ; BSR set to: 0
   358                           ;newmain.c: 128: {
   359                           ;newmain.c: 129: isRButtonPressed = 1;
   360  007DDC  0E01               	movlw	1
   361  007DDE  0100               	movlb	0	; () banked
   362  007DE0  6FB9               	movwf	_isRButtonPressed& (0+255),b
   363                           
   364                           ;newmain.c: 130: isRButtonPressing = 0;
   365  007DE2  0E00               	movlw	0
   366  007DE4  0100               	movlb	0	; () banked
   367  007DE6  6FBA               	movwf	_isRButtonPressing& (0+255),b
   368                           
   369                           ; BSR set to: 0
   370                           ;newmain.c: 132: t = dir;
   371  007DE8  C0B6  F0C1         	movff	_dir,main@t
   372                           
   373                           ;newmain.c: 133: switch( t )
   374  007DEC  D00A               	goto	l1897
   375  007DEE                     l1887:
   376                           
   377                           ; BSR set to: 0
   378  007DEE  0E64               	movlw	100
   379  007DF0  D005               	goto	L4
   380  007DF2                     l1889:
   381                           
   382                           ; BSR set to: 0
   383  007DF2  0E61               	movlw	97
   384  007DF4  D003               	goto	L4
   385  007DF6                     l1891:
   386                           
   387                           ; BSR set to: 0
   388  007DF6  0E77               	movlw	119
   389  007DF8  D001               	goto	L4
   390  007DFA                     l1893:
   391                           
   392                           ; BSR set to: 0
   393  007DFA  0E73               	movlw	115
   394  007DFC                     L4:
   395  007DFC  0100               	movlb	0	; () banked
   396  007DFE  6FB6               	movwf	_dir& (0+255),b
   397  007E00  D00E               	goto	l1899
   398  007E02                     l1897:
   399                           
   400                           ; BSR set to: 0
   401  007E02  0100               	movlb	0	; () banked
   402  007E04  51C1               	movf	main@t& (0+255),w,b
   403                           
   404                           ; Switch size 1, requested type "space"
   405                           ; Number of cases is 4, Range of values is 97 to 119
   406                           ; switch strategies available:
   407                           ; Name         Instructions Cycles
   408                           ; simple_byte           13     7 (average)
   409                           ;	Chosen strategy is simple_byte
   410  007E06  0A61               	xorlw	97	; case 97
   411  007E08  B4D8               	btfsc	status,2,c
   412  007E0A  D7F5               	goto	l1891
   413  007E0C  0A05               	xorlw	5	; case 100
   414  007E0E  B4D8               	btfsc	status,2,c
   415  007E10  D7F4               	goto	l1893
   416  007E12  0A17               	xorlw	23	; case 115
   417  007E14  B4D8               	btfsc	status,2,c
   418  007E16  D7ED               	goto	l1889
   419  007E18  0A04               	xorlw	4	; case 119
   420  007E1A  B4D8               	btfsc	status,2,c
   421  007E1C  D7E8               	goto	l1887
   422  007E1E                     l1899:
   423                           
   424                           ; BSR set to: 0
   425                           ;newmain.c: 140: }
   426                           ;newmain.c: 141: if( isRButtonPressed == 1 && PORTCbits.RC1 == 0 )
   427  007E1E  0100               	movlb	0	; () banked
   428  007E20  05B9               	decf	_isRButtonPressed& (0+255),w,b
   429  007E22  B4D8               	btfsc	status,2,c
   430                           
   431                           ; BSR set to: 0
   432  007E24  B282               	btfsc	3970,1,c	;volatile
   433  007E26  D003               	goto	l110
   434                           
   435                           ; BSR set to: 0
   436                           ;newmain.c: 142: isRButtonPressed = 0;
   437  007E28  0E00               	movlw	0
   438  007E2A  0100               	movlb	0	; () banked
   439  007E2C  6FB9               	movwf	_isRButtonPressed& (0+255),b
   440  007E2E                     l110:
   441                           
   442                           ; BSR set to: 0
   443                           ;newmain.c: 144: for( t=0; t<loopCount; t++ )
   444  007E2E  0E00               	movlw	0
   445  007E30  0100               	movlb	0	; () banked
   446  007E32  6FC1               	movwf	main@t& (0+255),b
   447  007E34  D004               	goto	l1909
   448  007E36                     l1905:
   449                           
   450                           ; BSR set to: 0
   451                           ;newmain.c: 145: Draw();
   452  007E36  EC02  F03C         	call	_Draw	;wreg free
   453  007E3A  0100               	movlb	0	; () banked
   454  007E3C  2BC1               	incf	main@t& (0+255),f,b
   455  007E3E                     l1909:
   456                           
   457                           ; BSR set to: 0
   458  007E3E  0100               	movlb	0	; () banked
   459  007E40  51BE               	movf	main@loopCount& (0+255),w,b
   460  007E42  0100               	movlb	0	; () banked
   461  007E44  5DC1               	subwf	main@t& (0+255),w,b
   462  007E46  A0D8               	btfss	status,0,c
   463  007E48  D7F6               	goto	l1905
   464                           
   465                           ; BSR set to: 0
   466                           ;newmain.c: 147: if( isLButtonPressed == 0 && isLButtonPressing == 1 )
   467  007E4A  0100               	movlb	0	; () banked
   468  007E4C  67B7               	tstfsz	_isLButtonPressed& (0+255),b
   469  007E4E  D025               	goto	l1929
   470                           
   471                           ; BSR set to: 0
   472  007E50  0100               	movlb	0	; () banked
   473  007E52  05B8               	decf	_isLButtonPressing& (0+255),w,b
   474  007E54  A4D8               	btfss	status,2,c
   475  007E56  D021               	goto	l1929
   476                           
   477                           ; BSR set to: 0
   478                           ;newmain.c: 148: {
   479                           ;newmain.c: 149: isLButtonPressed = 1;
   480  007E58  0E01               	movlw	1
   481  007E5A  0100               	movlb	0	; () banked
   482  007E5C  6FB7               	movwf	_isLButtonPressed& (0+255),b
   483                           
   484                           ;newmain.c: 150: isLButtonPressing = 0;
   485  007E5E  0E00               	movlw	0
   486  007E60  0100               	movlb	0	; () banked
   487  007E62  6FB8               	movwf	_isLButtonPressing& (0+255),b
   488                           
   489                           ; BSR set to: 0
   490                           ;newmain.c: 152: t = dir;
   491  007E64  C0B6  F0C1         	movff	_dir,main@t
   492                           
   493                           ;newmain.c: 153: switch( t )
   494  007E68  D00A               	goto	l1927
   495  007E6A                     l1917:
   496                           
   497                           ; BSR set to: 0
   498  007E6A  0E61               	movlw	97
   499  007E6C  D005               	goto	L7
   500  007E6E                     l1919:
   501                           
   502                           ; BSR set to: 0
   503  007E6E  0E64               	movlw	100
   504  007E70  D003               	goto	L7
   505  007E72                     l1921:
   506                           
   507                           ; BSR set to: 0
   508  007E72  0E73               	movlw	115
   509  007E74  D001               	goto	L7
   510  007E76                     l1923:
   511                           
   512                           ; BSR set to: 0
   513  007E76  0E77               	movlw	119
   514  007E78                     L7:
   515  007E78  0100               	movlb	0	; () banked
   516  007E7A  6FB6               	movwf	_dir& (0+255),b
   517  007E7C  D00E               	goto	l1929
   518  007E7E                     l1927:
   519                           
   520                           ; BSR set to: 0
   521  007E7E  0100               	movlb	0	; () banked
   522  007E80  51C1               	movf	main@t& (0+255),w,b
   523                           
   524                           ; Switch size 1, requested type "space"
   525                           ; Number of cases is 4, Range of values is 97 to 119
   526                           ; switch strategies available:
   527                           ; Name         Instructions Cycles
   528                           ; simple_byte           13     7 (average)
   529                           ;	Chosen strategy is simple_byte
   530  007E82  0A61               	xorlw	97	; case 97
   531  007E84  B4D8               	btfsc	status,2,c
   532  007E86  D7F5               	goto	l1921
   533  007E88  0A05               	xorlw	5	; case 100
   534  007E8A  B4D8               	btfsc	status,2,c
   535  007E8C  D7F4               	goto	l1923
   536  007E8E  0A17               	xorlw	23	; case 115
   537  007E90  B4D8               	btfsc	status,2,c
   538  007E92  D7ED               	goto	l1919
   539  007E94  0A04               	xorlw	4	; case 119
   540  007E96  B4D8               	btfsc	status,2,c
   541  007E98  D7E8               	goto	l1917
   542  007E9A                     l1929:
   543                           
   544                           ; BSR set to: 0
   545                           ;newmain.c: 160: }
   546                           ;newmain.c: 161: if( isLButtonPressed == 1 && PORTCbits.RC2 == 0 )
   547  007E9A  0100               	movlb	0	; () banked
   548  007E9C  05B7               	decf	_isLButtonPressed& (0+255),w,b
   549  007E9E  B4D8               	btfsc	status,2,c
   550                           
   551                           ; BSR set to: 0
   552  007EA0  B482               	btfsc	3970,2,c	;volatile
   553  007EA2  D003               	goto	l1935
   554                           
   555                           ; BSR set to: 0
   556                           ;newmain.c: 162: isLButtonPressed = 0;
   557  007EA4  0E00               	movlw	0
   558  007EA6  0100               	movlb	0	; () banked
   559  007EA8  6FB7               	movwf	_isLButtonPressed& (0+255),b
   560  007EAA                     l1935:
   561                           
   562                           ; BSR set to: 0
   563                           ;newmain.c: 165: Move();
   564  007EAA  ECB9  F03A         	call	_Move	;wreg free
   565                           
   566                           ;newmain.c: 166: if( ( feedx == snake[start][0] && feedy == snake[start][1] ) == 0 )
   567  007EAE  0E60               	movlw	low _snake
   568  007EB0  6E5A               	movwf	??_main& (0+255),c
   569  007EB2  0E00               	movlw	high _snake
   570  007EB4  6E5B               	movwf	(??_main+1)& (0+255),c
   571  007EB6  90D8               	bcf	status,0,c
   572  007EB8  345C               	rlcf	_start,w,c
   573  007EBA  6ED9               	movwf	fsr2l,c
   574  007EBC  345D               	rlcf	_start+1,w,c
   575  007EBE  6EDA               	movwf	fsr2h,c
   576  007EC0  505A               	movf	??_main,w,c
   577  007EC2  26D9               	addwf	fsr2l,f,c
   578  007EC4  505B               	movf	??_main+1,w,c
   579  007EC6  22DA               	addwfc	fsr2h,f,c
   580  007EC8  505E               	movf	_feedx,w,c
   581  007ECA  62DF               	cpfseq	indf2,c
   582  007ECC  D017               	goto	l1941
   583  007ECE  C05C  F05A         	movff	_start,??_main
   584  007ED2  C05D  F05B         	movff	_start+1,??_main+1
   585  007ED6  90D8               	bcf	status,0,c
   586  007ED8  365A               	rlcf	??_main,f,c
   587  007EDA  365B               	rlcf	??_main+1,f,c
   588  007EDC  0E01               	movlw	1
   589  007EDE  265A               	addwf	??_main,f,c
   590  007EE0  0E00               	movlw	0
   591  007EE2  225B               	addwfc	??_main+1,f,c
   592  007EE4  0100               	movlb	0	; () banked
   593  007EE6  0E60               	movlw	low _snake
   594  007EE8  245A               	addwf	??_main,w,c
   595  007EEA  6ED9               	movwf	fsr2l,c
   596  007EEC  0100               	movlb	0	; () banked
   597  007EEE  0E00               	movlw	high _snake
   598  007EF0  205B               	addwfc	??_main+1,w,c
   599  007EF2  6EDA               	movwf	fsr2h,c
   600  007EF4  50DF               	movf	indf2,w,c
   601  007EF6  185F               	xorwf	_feedy,w,c
   602  007EF8  B4D8               	btfsc	status,2,c
   603  007EFA  D036               	goto	l1953
   604  007EFC                     l1941:
   605                           
   606                           ;newmain.c: 167: {
   607                           ;newmain.c: 168: if( end == 0 ) end = 40;
   608  007EFC  0100               	movlb	0	; () banked
   609  007EFE  51B3               	movf	(_end+1)& (0+255),w,b
   610  007F00  11B2               	iorwf	_end& (0+255),w,b
   611  007F02  A4D8               	btfss	status,2,c
   612  007F04  D006               	goto	l1945
   613                           
   614                           ; BSR set to: 0
   615  007F06  0E00               	movlw	0
   616  007F08  0100               	movlb	0	; () banked
   617  007F0A  6FB3               	movwf	(_end+1)& (0+255),b
   618  007F0C  0E28               	movlw	40
   619  007F0E  0100               	movlb	0	; () banked
   620  007F10  6FB2               	movwf	_end& (0+255),b
   621  007F12                     l1945:
   622                           
   623                           ; BSR set to: 0
   624                           ;newmain.c: 169: end--;
   625  007F12  0100               	movlb	0	; () banked
   626  007F14  07B2               	decf	_end& (0+255),f,b
   627  007F16  A0D8               	btfss	status,0,c
   628  007F18  07B3               	decf	(_end+1)& (0+255),f,b
   629                           
   630                           ;newmain.c: 170: }
   631  007F1A  D030               	goto	l1955
   632  007F1C                     l1947:
   633                           
   634                           ;newmain.c: 173: {
   635                           ;newmain.c: 174: pseudoTime += ((pseudoTime % 5)+1)*9;
   636  007F1C  0E00               	movlw	0
   637  007F1E  6E04               	movwf	___awmod@divisor+1,c
   638  007F20  0E05               	movlw	5
   639  007F22  6E03               	movwf	___awmod@divisor,c
   640  007F24  C0BF  F001         	movff	main@pseudoTime,___awmod@dividend
   641  007F28  C0C0  F002         	movff	main@pseudoTime+1,___awmod@dividend+1
   642  007F2C  EC24  F038         	call	___awmod	;wreg free
   643  007F30  0E01               	movlw	1
   644  007F32  2401               	addwf	?___awmod,w,c
   645  007F34  6E07               	movwf	___wmul@multiplier,c
   646  007F36  0E00               	movlw	0
   647  007F38  2002               	addwfc	?___awmod+1,w,c
   648  007F3A  6E08               	movwf	___wmul@multiplier+1,c
   649  007F3C  0E00               	movlw	0
   650  007F3E  6E0A               	movwf	___wmul@multiplicand+1,c
   651  007F40  0E09               	movlw	9
   652  007F42  6E09               	movwf	___wmul@multiplicand,c
   653  007F44  ECC9  F037         	call	___wmul	;wreg free
   654  007F48  5007               	movf	?___wmul,w,c
   655  007F4A  0100               	movlb	0	; () banked
   656  007F4C  27BF               	addwf	main@pseudoTime& (0+255),f,b
   657  007F4E  5008               	movf	?___wmul+1,w,c
   658  007F50  0100               	movlb	0	; () banked
   659  007F52  23C0               	addwfc	(main@pseudoTime+1)& (0+255),f,b
   660                           
   661                           ; BSR set to: 0
   662                           ;newmain.c: 175: pseudoTime %= 64;
   663  007F54  0E3F               	movlw	63
   664  007F56  0100               	movlb	0	; () banked
   665  007F58  17BF               	andwf	main@pseudoTime& (0+255),f,b
   666  007F5A  0E00               	movlw	0
   667  007F5C  0100               	movlb	0	; () banked
   668  007F5E  17C0               	andwf	(main@pseudoTime+1)& (0+255),f,b
   669                           
   670                           ; BSR set to: 0
   671                           ;newmain.c: 176: size--;
   672  007F60  0100               	movlb	0	; () banked
   673  007F62  07B4               	decf	_size& (0+255),f,b
   674  007F64  A0D8               	btfss	status,0,c
   675  007F66  07B5               	decf	(_size+1)& (0+255),f,b
   676  007F68                     l1953:
   677                           
   678                           ; BSR set to: 0
   679  007F68  C0BF  F009         	movff	main@pseudoTime,PlaceFeed@s
   680  007F6C  C0C0  F00A         	movff	main@pseudoTime+1,PlaceFeed@s+1
   681  007F70  EC66  F039         	call	_PlaceFeed	;wreg free
   682  007F74  500A               	movf	?_PlaceFeed+1,w,c
   683  007F76  1009               	iorwf	?_PlaceFeed,w,c
   684  007F78  B4D8               	btfsc	status,2,c
   685  007F7A  D7D0               	goto	l1947
   686  007F7C                     l1955:
   687                           
   688                           ;newmain.c: 177: }
   689                           ;newmain.c: 179: for( t=0; t<loopCount; t++ )
   690  007F7C  0E00               	movlw	0
   691  007F7E  0100               	movlb	0	; () banked
   692  007F80  6FC1               	movwf	main@t& (0+255),b
   693  007F82  D004               	goto	l1961
   694  007F84                     l1957:
   695                           
   696                           ; BSR set to: 0
   697                           ;newmain.c: 180: Draw();
   698  007F84  EC02  F03C         	call	_Draw	;wreg free
   699  007F88  0100               	movlb	0	; () banked
   700  007F8A  2BC1               	incf	main@t& (0+255),f,b
   701  007F8C                     l1961:
   702                           
   703                           ; BSR set to: 0
   704  007F8C  0100               	movlb	0	; () banked
   705  007F8E  51BE               	movf	main@loopCount& (0+255),w,b
   706  007F90  0100               	movlb	0	; () banked
   707  007F92  5DC1               	subwf	main@t& (0+255),w,b
   708  007F94  A0D8               	btfss	status,0,c
   709  007F96  D7F6               	goto	l1957
   710                           
   711                           ; BSR set to: 0
   712                           ;newmain.c: 182: if( ControllForCrush() == 1 )
   713                           
   714                           ; BSR set to: 0
   715  007F98  ECC5  F039         	call	_ControllForCrush	;wreg free
   716  007F9C  6E5A               	movwf	??_main& (0+255),c
   717  007F9E  045A               	decf	??_main,w,c
   718  007FA0  B4D8               	btfsc	status,2,c
   719  007FA2  D67E               	goto	l87
   720                           
   721                           ;newmain.c: 185: }
   722                           ;newmain.c: 187: if( PORTCbits.RC1 == 1 && isRButtonPressed == 0 )
   723                           
   724                           ;newmain.c: 183: {
   725                           ;newmain.c: 184: goto begin;
   726  007FA4  A282               	btfss	3970,1,c	;volatile
   727  007FA6  D006               	goto	l1971
   728  007FA8  0100               	movlb	0	; () banked
   729  007FAA  67B9               	tstfsz	_isRButtonPressed& (0+255),b
   730  007FAC  D003               	goto	l1971
   731                           
   732                           ; BSR set to: 0
   733                           ;newmain.c: 188: isRButtonPressing = 1;
   734  007FAE  0E01               	movlw	1
   735  007FB0  0100               	movlb	0	; () banked
   736  007FB2  6FBA               	movwf	_isRButtonPressing& (0+255),b
   737  007FB4                     l1971:
   738                           
   739                           ;newmain.c: 189: if( PORTCbits.RC2 == 1 && isLButtonPressed == 0 )
   740  007FB4  A482               	btfss	3970,2,c	;volatile
   741  007FB6  D006               	goto	l135
   742  007FB8  0100               	movlb	0	; () banked
   743  007FBA  67B7               	tstfsz	_isLButtonPressed& (0+255),b
   744  007FBC  D003               	goto	l135
   745                           
   746                           ; BSR set to: 0
   747                           ;newmain.c: 190: isLButtonPressing = 1;
   748  007FBE  0E01               	movlw	1
   749  007FC0  0100               	movlb	0	; () banked
   750  007FC2  6FB8               	movwf	_isLButtonPressing& (0+255),b
   751  007FC4                     l135:
   752                           
   753                           ;newmain.c: 192: for( t=0; t<loopCount; t++ )
   754  007FC4  0E00               	movlw	0
   755  007FC6  0100               	movlb	0	; () banked
   756  007FC8  6FC1               	movwf	main@t& (0+255),b
   757  007FCA  D004               	goto	l1981
   758  007FCC                     l1977:
   759                           
   760                           ; BSR set to: 0
   761                           ;newmain.c: 193: Draw();
   762  007FCC  EC02  F03C         	call	_Draw	;wreg free
   763  007FD0  0100               	movlb	0	; () banked
   764  007FD2  2BC1               	incf	main@t& (0+255),f,b
   765  007FD4                     l1981:
   766                           
   767                           ; BSR set to: 0
   768  007FD4  0100               	movlb	0	; () banked
   769  007FD6  51BE               	movf	main@loopCount& (0+255),w,b
   770  007FD8  0100               	movlb	0	; () banked
   771  007FDA  5DC1               	subwf	main@t& (0+255),w,b
   772  007FDC  A0D8               	btfss	status,0,c
   773  007FDE  D7F6               	goto	l1977
   774                           
   775                           ; BSR set to: 0
   776                           ;newmain.c: 195: pseudoTime++;
   777                           
   778                           ; BSR set to: 0
   779  007FE0  0100               	movlb	0	; () banked
   780  007FE2  4BBF               	infsnz	main@pseudoTime& (0+255),f,b
   781  007FE4  2BC0               	incf	(main@pseudoTime+1)& (0+255),f,b
   782                           
   783                           ; BSR set to: 0
   784                           ;newmain.c: 196: if( pseudoTime == 64 ) pseudoTime = 0;
   785  007FE6  0100               	movlb	0	; () banked
   786  007FE8  51BF               	movf	main@pseudoTime& (0+255),w,b
   787  007FEA  0A40               	xorlw	64
   788  007FEC  11C0               	iorwf	(main@pseudoTime+1)& (0+255),w,b
   789  007FEE  A4D8               	btfss	status,2,c
   790  007FF0  D6B9               	goto	l1855
   791                           
   792                           ; BSR set to: 0
   793  007FF2  0E00               	movlw	0
   794  007FF4  0100               	movlb	0	; () banked
   795  007FF6  6FC0               	movwf	(main@pseudoTime+1)& (0+255),b
   796  007FF8  0E00               	movlw	0
   797  007FFA  0100               	movlb	0	; () banked
   798  007FFC  6FBF               	movwf	main@pseudoTime& (0+255),b
   799  007FFE  D6B2               	goto	l1855
   800  008000                     __end_of_main:
   801                           	opt stack 0
   802                           indf2	equ	0xFDF
   803                           fsr2h	equ	0xFDA
   804                           fsr2l	equ	0xFD9
   805                           status	equ	0xFD8
   806                           
   807                           	psect	cinit
   808  006F74                     __pcinit:
   809                           	opt stack 0
   810  006F74                     start_initialization:
   811                           	opt stack 0
   812  006F74                     __initialization:
   813                           	opt stack 0
   814                           
   815                           ; Clear objects allocated to BANK0 (91 bytes)
   816  006F74  EE00  F060         	lfsr	0,__pbssBANK0
   817  006F78  0E5B               	movlw	91
   818  006F7A                     clear_0:
   819  006F7A  6AEE               	clrf	postinc0,c
   820  006F7C  06E8               	decf	wreg,f,c
   821  006F7E  E1FD               	bnz	clear_0
   822                           
   823                           ; Clear objects allocated to COMRAM (4 bytes)
   824  006F80  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   825  006F82  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   826  006F84  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   827  006F86  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   828  006F88                     end_of_initialization:
   829                           	opt stack 0
   830  006F88                     __end_of__initialization:
   831                           	opt stack 0
   832  006F88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   833  006F8A  6EF8               	movwf	tblptru,c
   834  006F8C  0100               	movlb	0
   835  006F8E  EF50  F03E         	goto	_main	;jump to C main() function
   836                           tblptru	equ	0xFF8
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           indf2	equ	0xFDF
   840                           fsr2h	equ	0xFDA
   841                           fsr2l	equ	0xFD9
   842                           status	equ	0xFD8
   843                           
   844                           	psect	bssCOMRAM
   845  00005C                     __pbssCOMRAM:
   846                           	opt stack 0
   847  00005C                     _start:
   848                           	opt stack 0
   849  00005C                     	ds	2
   850  00005E                     _feedx:
   851                           	opt stack 0
   852  00005E                     	ds	1
   853  00005F                     _feedy:
   854                           	opt stack 0
   855  00005F                     	ds	1
   856                           tblptru	equ	0xFF8
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           indf2	equ	0xFDF
   860                           fsr2h	equ	0xFDA
   861                           fsr2l	equ	0xFD9
   862                           status	equ	0xFD8
   863                           
   864                           	psect	bssBANK0
   865  000060                     __pbssBANK0:
   866                           	opt stack 0
   867  000060                     _snake:
   868                           	opt stack 0
   869  000060                     	ds	82
   870  0000B2                     _end:
   871                           	opt stack 0
   872  0000B2                     	ds	2
   873  0000B4                     _size:
   874                           	opt stack 0
   875  0000B4                     	ds	2
   876  0000B6                     _dir:
   877                           	opt stack 0
   878  0000B6                     	ds	1
   879  0000B7                     _isLButtonPressed:
   880                           	opt stack 0
   881  0000B7                     	ds	1
   882  0000B8                     _isLButtonPressing:
   883                           	opt stack 0
   884  0000B8                     	ds	1
   885  0000B9                     _isRButtonPressed:
   886                           	opt stack 0
   887  0000B9                     	ds	1
   888  0000BA                     _isRButtonPressing:
   889                           	opt stack 0
   890  0000BA                     	ds	1
   891                           tblptru	equ	0xFF8
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           indf2	equ	0xFDF
   895                           fsr2h	equ	0xFDA
   896                           fsr2l	equ	0xFD9
   897                           status	equ	0xFD8
   898                           
   899                           	psect	cstackBANK0
   900  0000BB                     __pcstackBANK0:
   901                           	opt stack 0
   902  0000BB                     main@divConstant:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x0
   906  0000BB                     	ds	1
   907  0000BC                     main@loopConstant:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x1
   911  0000BC                     	ds	1
   912  0000BD                     main@minLoop:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x2
   916  0000BD                     	ds	1
   917  0000BE                     main@loopCount:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x3
   921  0000BE                     	ds	1
   922  0000BF                     main@pseudoTime:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x4
   926  0000BF                     	ds	2
   927  0000C1                     main@t:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x6
   931  0000C1                     	ds	1
   932                           tblptru	equ	0xFF8
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           indf2	equ	0xFDF
   936                           fsr2h	equ	0xFDA
   937                           fsr2l	equ	0xFD9
   938                           status	equ	0xFD8
   939                           
   940                           	psect	cstackCOMRAM
   941  000001                     __pcstackCOMRAM:
   942                           	opt stack 0
   943  000001                     ??_Move:
   944  000001                     ??_Delay1Second:
   945  000001                     ?___awdiv:
   946                           	opt stack 0
   947  000001                     ?___awmod:
   948                           	opt stack 0
   949  000001                     Out_D@o:
   950                           	opt stack 0
   951  000001                     Out_B@o:
   952                           	opt stack 0
   953  000001                     ___awdiv@dividend:
   954                           	opt stack 0
   955  000001                     ___awmod@dividend:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x0
   959  000001                     	ds	1
   960  000002                     Out_D@pin:
   961                           	opt stack 0
   962  000002                     Out_B@pin:
   963                           	opt stack 0
   964  000002                     Delay1Second@i:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     DrawMatris@matris:
   970                           	opt stack 0
   971  000003                     ___awdiv@divisor:
   972                           	opt stack 0
   973  000003                     ___awmod@divisor:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x2
   977  000003                     	ds	1
   978  000004                     ??_init:
   979  000004                     Move@nx:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x3
   983  000004                     	ds	1
   984  000005                     ??_DrawMatris:
   985  000005                     ___awdiv@counter:
   986                           	opt stack 0
   987  000005                     ___awmod@counter:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x4
   991  000005                     	ds	1
   992  000006                     ___awdiv@sign:
   993                           	opt stack 0
   994  000006                     ___awmod@sign:
   995                           	opt stack 0
   996  000006                     Move@ny:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x5
  1000  000006                     	ds	1
  1001  000007                     ??_Draw:
  1002  000007                     ??_ControllForCrush:
  1003  000007                     ?___wmul:
  1004                           	opt stack 0
  1005  000007                     ___wmul@multiplier:
  1006                           	opt stack 0
  1007  000007                     ___awdiv@quotient:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  000007                     	ds	1
  1012  000008                     init@i:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x7
  1016  000008                     	ds	1
  1017  000009                     ?_PlaceFeed:
  1018                           	opt stack 0
  1019  000009                     PlaceFeed@s:
  1020                           	opt stack 0
  1021  000009                     Draw@it:
  1022                           	opt stack 0
  1023  000009                     DrawMatris@i:
  1024                           	opt stack 0
  1025  000009                     ___wmul@multiplicand:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x8
  1029  000009                     	ds	1
  1030  00000A                     init@j:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x9
  1034  00000A                     	ds	1
  1035  00000B                     ??_PlaceFeed:
  1036  00000B                     ControllForCrush@it:
  1037                           	opt stack 0
  1038  00000B                     DrawMatris@j:
  1039                           	opt stack 0
  1040  00000B                     ___wmul@product:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0xA
  1044  00000B                     	ds	2
  1045  00000D                     ??_p321:
  1046  00000D                     PlaceFeed@it:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  00000D                     	ds	4
  1051  000011                     p321@mm:
  1052                           	opt stack 0
  1053                           
  1054                           ; 64 bytes @ 0x10
  1055  000011                     	ds	64
  1056  000051                     p321@j:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x50
  1060  000051                     	ds	2
  1061  000053                     p321@i:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x52
  1065  000053                     	ds	2
  1066  000055                     
  1067                           ; 2 bytes @ 0x54
  1068  000055                     	ds	2
  1069  000057                     
  1070                           ; 3 bytes @ 0x56
  1071  000057                     	ds	3
  1072  00005A                     ??_main:
  1073                           
  1074                           ; 0 bytes @ 0x59
  1075  00005A                     	ds	2
  1076                           tblptru	equ	0xFF8
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           indf2	equ	0xFDF
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function _p321 *****************
  1085 ;; Defined at:
  1086 ;;		line 440 in file "newmain.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  mm             64   16[COMRAM] unsigned char [8][8]
  1091 ;;  i               2   82[COMRAM] int 
  1092 ;;  j               2   80[COMRAM] int 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:        68       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1105 ;;      Totals:        72       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:       72 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		_DrawMatris
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text1
  1117  0079EA                     __ptext1:
  1118                           	opt stack 0
  1119  0079EA                     _p321:
  1120                           	opt stack 28
  1121                           
  1122                           ;newmain.c: 442: char mm[8][8];
  1123                           ;newmain.c: 444: int i,j;
  1124                           ;newmain.c: 446: for( i=0; i<8; i++ )
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;incstack = 0
  1128  0079EA  0E00               	movlw	0
  1129  0079EC  6E54               	movwf	p321@i+1,c
  1130  0079EE  0E00               	movlw	0
  1131  0079F0  6E53               	movwf	p321@i,c
  1132  0079F2  5054               	movf	p321@i+1,w,c
  1133  0079F4  0A80               	xorlw	128
  1134  0079F6  0F80               	addlw	-128
  1135  0079F8  0E08               	movlw	8
  1136  0079FA  B4D8               	btfsc	status,2,c
  1137  0079FC  5C53               	subwf	p321@i,w,c
  1138  0079FE  B0D8               	btfsc	status,0,c
  1139  007A00  D02F               	goto	l1611
  1140                           
  1141                           ;newmain.c: 447: for( j=0; j<8; j++ )
  1142  007A02  0E00               	movlw	0
  1143  007A04  6E52               	movwf	p321@j+1,c
  1144  007A06  0E00               	movlw	0
  1145  007A08  6E51               	movwf	p321@j,c
  1146  007A0A  5052               	movf	p321@j+1,w,c
  1147  007A0C  0A80               	xorlw	128
  1148  007A0E  0F80               	addlw	-128
  1149  007A10  0E08               	movlw	8
  1150  007A12  B4D8               	btfsc	status,2,c
  1151  007A14  5C51               	subwf	p321@j,w,c
  1152  007A16  B0D8               	btfsc	status,0,c
  1153  007A18  D020               	goto	l1607
  1154                           
  1155                           ;newmain.c: 448: mm[i][j] = 0;
  1156  007A1A  C053  F00D         	movff	p321@i,??_p321
  1157  007A1E  C054  F00E         	movff	p321@i+1,??_p321+1
  1158  007A22  90D8               	bcf	status,0,c
  1159  007A24  360D               	rlcf	??_p321,f,c
  1160  007A26  360E               	rlcf	??_p321+1,f,c
  1161  007A28  90D8               	bcf	status,0,c
  1162  007A2A  360D               	rlcf	??_p321,f,c
  1163  007A2C  360E               	rlcf	??_p321+1,f,c
  1164  007A2E  90D8               	bcf	status,0,c
  1165  007A30  360D               	rlcf	??_p321,f,c
  1166  007A32  360E               	rlcf	??_p321+1,f,c
  1167  007A34  0E11               	movlw	low p321@mm
  1168  007A36  6E0F               	movwf	(??_p321+2)& (0+255),c
  1169  007A38  0E00               	movlw	high p321@mm
  1170  007A3A  6E10               	movwf	(??_p321+3)& (0+255),c
  1171  007A3C  500D               	movf	??_p321,w,c
  1172  007A3E  260F               	addwf	??_p321+2,f,c
  1173  007A40  500E               	movf	??_p321+1,w,c
  1174  007A42  2210               	addwfc	??_p321+3,f,c
  1175  007A44  5051               	movf	p321@j,w,c
  1176  007A46  240F               	addwf	??_p321+2,w,c
  1177  007A48  6ED9               	movwf	fsr2l,c
  1178  007A4A  5052               	movf	p321@j+1,w,c
  1179  007A4C  2010               	addwfc	??_p321+3,w,c
  1180  007A4E  6EDA               	movwf	fsr2h,c
  1181  007A50  0E00               	movlw	0
  1182  007A52  6EDF               	movwf	indf2,c
  1183  007A54  4A51               	infsnz	p321@j,f,c
  1184  007A56  2A52               	incf	p321@j+1,f,c
  1185  007A58  D7D8               	goto	L8
  1186  007A5A                     l1607:
  1187  007A5A  4A53               	infsnz	p321@i,f,c
  1188  007A5C  2A54               	incf	p321@i+1,f,c
  1189  007A5E  D7C9               	goto	L9
  1190  007A60                     l1611:
  1191                           
  1192                           ;newmain.c: 450: mm[1][2] = 1;
  1193  007A60  0E01               	movlw	1
  1194  007A62  6E1B               	movwf	p321@mm+10,c
  1195                           
  1196                           ;newmain.c: 451: mm[2][2] = 1;
  1197  007A64  0E01               	movlw	1
  1198  007A66  6E23               	movwf	p321@mm+18,c
  1199                           
  1200                           ;newmain.c: 452: mm[3][2] = 1;
  1201  007A68  0E01               	movlw	1
  1202  007A6A  6E2B               	movwf	p321@mm+26,c
  1203                           
  1204                           ;newmain.c: 453: mm[4][2] = 1;
  1205  007A6C  0E01               	movlw	1
  1206  007A6E  6E33               	movwf	p321@mm+34,c
  1207                           
  1208                           ;newmain.c: 454: mm[5][2] = 1;
  1209  007A70  0E01               	movlw	1
  1210  007A72  6E3B               	movwf	p321@mm+42,c
  1211                           
  1212                           ;newmain.c: 455: mm[1][3] = 1;
  1213  007A74  0E01               	movlw	1
  1214  007A76  6E1C               	movwf	p321@mm+11,c
  1215                           
  1216                           ;newmain.c: 456: mm[1][4] = 1;
  1217  007A78  0E01               	movlw	1
  1218  007A7A  6E1D               	movwf	p321@mm+12,c
  1219                           
  1220                           ;newmain.c: 457: mm[3][3] = 1;
  1221  007A7C  0E01               	movlw	1
  1222  007A7E  6E2C               	movwf	p321@mm+27,c
  1223                           
  1224                           ;newmain.c: 458: mm[5][3] = 1;
  1225  007A80  0E01               	movlw	1
  1226  007A82  6E3C               	movwf	p321@mm+43,c
  1227                           
  1228                           ;newmain.c: 459: mm[5][4] = 1;
  1229  007A84  0E01               	movlw	1
  1230  007A86  6E3D               	movwf	p321@mm+44,c
  1231                           
  1232                           ;newmain.c: 461: for( i=0;i<200;i++ )
  1233  007A88  0E00               	movlw	0
  1234  007A8A  6E54               	movwf	p321@i+1,c
  1235  007A8C  0E00               	movlw	0
  1236  007A8E  6E53               	movwf	p321@i,c
  1237  007A90  5054               	movf	p321@i+1,w,c
  1238  007A92  0A80               	xorlw	128
  1239  007A94  0F80               	addlw	-128
  1240  007A96  0EC8               	movlw	200
  1241  007A98  B4D8               	btfsc	status,2,c
  1242  007A9A  5C53               	subwf	p321@i,w,c
  1243  007A9C  B0D8               	btfsc	status,0,c
  1244  007A9E  D009               	goto	l231
  1245                           
  1246                           ;newmain.c: 462: DrawMatris( mm );
  1247  007AA0  0E00               	movlw	high p321@mm
  1248  007AA2  6E04               	movwf	DrawMatris@matris+1,c
  1249  007AA4  0E11               	movlw	low p321@mm
  1250  007AA6  6E03               	movwf	DrawMatris@matris,c
  1251  007AA8  EC2F  F03A         	call	_DrawMatris	;wreg free
  1252  007AAC  4A53               	infsnz	p321@i,f,c
  1253  007AAE  2A54               	incf	p321@i+1,f,c
  1254  007AB0  D7EF               	goto	L10
  1255  007AB2                     l231:
  1256                           
  1257                           ;newmain.c: 464: LATB0 = 1;
  1258  007AB2  808A               	bsf	3978,0,c	;volatile
  1259                           
  1260                           ;newmain.c: 465: LATB1 = 1;
  1261  007AB4  828A               	bsf	3978,1,c	;volatile
  1262                           
  1263                           ;newmain.c: 466: LATB2 = 1;
  1264  007AB6  848A               	bsf	3978,2,c	;volatile
  1265                           
  1266                           ;newmain.c: 467: LATB3 = 1;
  1267  007AB8  868A               	bsf	3978,3,c	;volatile
  1268                           
  1269                           ;newmain.c: 468: LATB4 = 1;
  1270  007ABA  888A               	bsf	3978,4,c	;volatile
  1271                           
  1272                           ;newmain.c: 469: LATB5 = 1;
  1273  007ABC  8A8A               	bsf	3978,5,c	;volatile
  1274                           
  1275                           ;newmain.c: 470: LATB6 = 1;
  1276  007ABE  8C8A               	bsf	3978,6,c	;volatile
  1277                           
  1278                           ;newmain.c: 471: LATB7 = 1;
  1279  007AC0  8E8A               	bsf	3978,7,c	;volatile
  1280                           
  1281                           ;newmain.c: 472: LATD0 = 0;
  1282  007AC2  908C               	bcf	3980,0,c	;volatile
  1283                           
  1284                           ;newmain.c: 473: LATD1 = 0;
  1285  007AC4  928C               	bcf	3980,1,c	;volatile
  1286                           
  1287                           ;newmain.c: 474: LATD2 = 0;
  1288  007AC6  948C               	bcf	3980,2,c	;volatile
  1289                           
  1290                           ;newmain.c: 475: LATD3 = 0;
  1291  007AC8  968C               	bcf	3980,3,c	;volatile
  1292                           
  1293                           ;newmain.c: 476: LATD4 = 0;
  1294  007ACA  988C               	bcf	3980,4,c	;volatile
  1295                           
  1296                           ;newmain.c: 477: LATD5 = 0;
  1297  007ACC  9A8C               	bcf	3980,5,c	;volatile
  1298                           
  1299                           ;newmain.c: 478: LATD6 = 0;
  1300  007ACE  9C8C               	bcf	3980,6,c	;volatile
  1301                           
  1302                           ;newmain.c: 479: LATD7 = 0;
  1303  007AD0  9E8C               	bcf	3980,7,c	;volatile
  1304                           
  1305                           ;newmain.c: 481: for( i=0; i<8; i++ )
  1306  007AD2  0E00               	movlw	0
  1307  007AD4  6E54               	movwf	p321@i+1,c
  1308  007AD6  0E00               	movlw	0
  1309  007AD8  6E53               	movwf	p321@i,c
  1310  007ADA  5054               	movf	p321@i+1,w,c
  1311  007ADC  0A80               	xorlw	128
  1312  007ADE  0F80               	addlw	-128
  1313  007AE0  0E08               	movlw	8
  1314  007AE2  B4D8               	btfsc	status,2,c
  1315  007AE4  5C53               	subwf	p321@i,w,c
  1316  007AE6  B0D8               	btfsc	status,0,c
  1317  007AE8  D02F               	goto	l1645
  1318                           
  1319                           ;newmain.c: 482: for( j=0; j<8; j++ )
  1320  007AEA  0E00               	movlw	0
  1321  007AEC  6E52               	movwf	p321@j+1,c
  1322  007AEE  0E00               	movlw	0
  1323  007AF0  6E51               	movwf	p321@j,c
  1324  007AF2  5052               	movf	p321@j+1,w,c
  1325  007AF4  0A80               	xorlw	128
  1326  007AF6  0F80               	addlw	-128
  1327  007AF8  0E08               	movlw	8
  1328  007AFA  B4D8               	btfsc	status,2,c
  1329  007AFC  5C51               	subwf	p321@j,w,c
  1330  007AFE  B0D8               	btfsc	status,0,c
  1331  007B00  D020               	goto	l1641
  1332                           
  1333                           ;newmain.c: 483: mm[i][j] = 0;
  1334  007B02  C053  F00D         	movff	p321@i,??_p321
  1335  007B06  C054  F00E         	movff	p321@i+1,??_p321+1
  1336  007B0A  90D8               	bcf	status,0,c
  1337  007B0C  360D               	rlcf	??_p321,f,c
  1338  007B0E  360E               	rlcf	??_p321+1,f,c
  1339  007B10  90D8               	bcf	status,0,c
  1340  007B12  360D               	rlcf	??_p321,f,c
  1341  007B14  360E               	rlcf	??_p321+1,f,c
  1342  007B16  90D8               	bcf	status,0,c
  1343  007B18  360D               	rlcf	??_p321,f,c
  1344  007B1A  360E               	rlcf	??_p321+1,f,c
  1345  007B1C  0E11               	movlw	low p321@mm
  1346  007B1E  6E0F               	movwf	(??_p321+2)& (0+255),c
  1347  007B20  0E00               	movlw	high p321@mm
  1348  007B22  6E10               	movwf	(??_p321+3)& (0+255),c
  1349  007B24  500D               	movf	??_p321,w,c
  1350  007B26  260F               	addwf	??_p321+2,f,c
  1351  007B28  500E               	movf	??_p321+1,w,c
  1352  007B2A  2210               	addwfc	??_p321+3,f,c
  1353  007B2C  5051               	movf	p321@j,w,c
  1354  007B2E  240F               	addwf	??_p321+2,w,c
  1355  007B30  6ED9               	movwf	fsr2l,c
  1356  007B32  5052               	movf	p321@j+1,w,c
  1357  007B34  2010               	addwfc	??_p321+3,w,c
  1358  007B36  6EDA               	movwf	fsr2h,c
  1359  007B38  0E00               	movlw	0
  1360  007B3A  6EDF               	movwf	indf2,c
  1361  007B3C  4A51               	infsnz	p321@j,f,c
  1362  007B3E  2A52               	incf	p321@j+1,f,c
  1363  007B40  D7D8               	goto	L11
  1364  007B42                     l1641:
  1365  007B42  4A53               	infsnz	p321@i,f,c
  1366  007B44  2A54               	incf	p321@i+1,f,c
  1367  007B46  D7C9               	goto	L12
  1368  007B48                     l1645:
  1369                           
  1370                           ;newmain.c: 485: mm[1][4] = 1;
  1371  007B48  0E01               	movlw	1
  1372  007B4A  6E1D               	movwf	p321@mm+12,c
  1373                           
  1374                           ;newmain.c: 486: mm[1][3] = 1;
  1375  007B4C  0E01               	movlw	1
  1376  007B4E  6E1C               	movwf	p321@mm+11,c
  1377                           
  1378                           ;newmain.c: 487: mm[1][2] = 1;
  1379  007B50  0E01               	movlw	1
  1380  007B52  6E1B               	movwf	p321@mm+10,c
  1381                           
  1382                           ;newmain.c: 488: mm[2][2] = 1;
  1383  007B54  0E01               	movlw	1
  1384  007B56  6E23               	movwf	p321@mm+18,c
  1385                           
  1386                           ;newmain.c: 489: mm[3][2] = 1;
  1387  007B58  0E01               	movlw	1
  1388  007B5A  6E2B               	movwf	p321@mm+26,c
  1389                           
  1390                           ;newmain.c: 490: mm[3][3] = 1;
  1391  007B5C  0E01               	movlw	1
  1392  007B5E  6E2C               	movwf	p321@mm+27,c
  1393                           
  1394                           ;newmain.c: 491: mm[3][4] = 1;
  1395  007B60  0E01               	movlw	1
  1396  007B62  6E2D               	movwf	p321@mm+28,c
  1397                           
  1398                           ;newmain.c: 492: mm[4][4] = 1;
  1399  007B64  0E01               	movlw	1
  1400  007B66  6E35               	movwf	p321@mm+36,c
  1401                           
  1402                           ;newmain.c: 493: mm[5][4] = 1;
  1403  007B68  0E01               	movlw	1
  1404  007B6A  6E3D               	movwf	p321@mm+44,c
  1405                           
  1406                           ;newmain.c: 494: mm[5][3] = 1;
  1407  007B6C  0E01               	movlw	1
  1408  007B6E  6E3C               	movwf	p321@mm+43,c
  1409                           
  1410                           ;newmain.c: 495: mm[5][2] = 1;
  1411  007B70  0E01               	movlw	1
  1412  007B72  6E3B               	movwf	p321@mm+42,c
  1413                           
  1414                           ;newmain.c: 497: for( i=0;i<200;i++ )
  1415  007B74  0E00               	movlw	0
  1416  007B76  6E54               	movwf	p321@i+1,c
  1417  007B78  0E00               	movlw	0
  1418  007B7A  6E53               	movwf	p321@i,c
  1419  007B7C  5054               	movf	p321@i+1,w,c
  1420  007B7E  0A80               	xorlw	128
  1421  007B80  0F80               	addlw	-128
  1422  007B82  0EC8               	movlw	200
  1423  007B84  B4D8               	btfsc	status,2,c
  1424  007B86  5C53               	subwf	p321@i,w,c
  1425  007B88  B0D8               	btfsc	status,0,c
  1426  007B8A  D009               	goto	l237
  1427                           
  1428                           ;newmain.c: 498: DrawMatris( mm );
  1429  007B8C  0E00               	movlw	high p321@mm
  1430  007B8E  6E04               	movwf	DrawMatris@matris+1,c
  1431  007B90  0E11               	movlw	low p321@mm
  1432  007B92  6E03               	movwf	DrawMatris@matris,c
  1433  007B94  EC2F  F03A         	call	_DrawMatris	;wreg free
  1434  007B98  4A53               	infsnz	p321@i,f,c
  1435  007B9A  2A54               	incf	p321@i+1,f,c
  1436  007B9C  D7EF               	goto	L13
  1437  007B9E                     l237:
  1438                           
  1439                           ;newmain.c: 500: LATB0 = 1;
  1440  007B9E  808A               	bsf	3978,0,c	;volatile
  1441                           
  1442                           ;newmain.c: 501: LATB1 = 1;
  1443  007BA0  828A               	bsf	3978,1,c	;volatile
  1444                           
  1445                           ;newmain.c: 502: LATB2 = 1;
  1446  007BA2  848A               	bsf	3978,2,c	;volatile
  1447                           
  1448                           ;newmain.c: 503: LATB3 = 1;
  1449  007BA4  868A               	bsf	3978,3,c	;volatile
  1450                           
  1451                           ;newmain.c: 504: LATB4 = 1;
  1452  007BA6  888A               	bsf	3978,4,c	;volatile
  1453                           
  1454                           ;newmain.c: 505: LATB5 = 1;
  1455  007BA8  8A8A               	bsf	3978,5,c	;volatile
  1456                           
  1457                           ;newmain.c: 506: LATB6 = 1;
  1458  007BAA  8C8A               	bsf	3978,6,c	;volatile
  1459                           
  1460                           ;newmain.c: 507: LATB7 = 1;
  1461  007BAC  8E8A               	bsf	3978,7,c	;volatile
  1462                           
  1463                           ;newmain.c: 508: LATD0 = 0;
  1464  007BAE  908C               	bcf	3980,0,c	;volatile
  1465                           
  1466                           ;newmain.c: 509: LATD1 = 0;
  1467  007BB0  928C               	bcf	3980,1,c	;volatile
  1468                           
  1469                           ;newmain.c: 510: LATD2 = 0;
  1470  007BB2  948C               	bcf	3980,2,c	;volatile
  1471                           
  1472                           ;newmain.c: 511: LATD3 = 0;
  1473  007BB4  968C               	bcf	3980,3,c	;volatile
  1474                           
  1475                           ;newmain.c: 512: LATD4 = 0;
  1476  007BB6  988C               	bcf	3980,4,c	;volatile
  1477                           
  1478                           ;newmain.c: 513: LATD5 = 0;
  1479  007BB8  9A8C               	bcf	3980,5,c	;volatile
  1480                           
  1481                           ;newmain.c: 514: LATD6 = 0;
  1482  007BBA  9C8C               	bcf	3980,6,c	;volatile
  1483                           
  1484                           ;newmain.c: 515: LATD7 = 0;
  1485  007BBC  9E8C               	bcf	3980,7,c	;volatile
  1486                           
  1487                           ;newmain.c: 517: for( i=0; i<8; i++ )
  1488  007BBE  0E00               	movlw	0
  1489  007BC0  6E54               	movwf	p321@i+1,c
  1490  007BC2  0E00               	movlw	0
  1491  007BC4  6E53               	movwf	p321@i,c
  1492  007BC6  5054               	movf	p321@i+1,w,c
  1493  007BC8  0A80               	xorlw	128
  1494  007BCA  0F80               	addlw	-128
  1495  007BCC  0E08               	movlw	8
  1496  007BCE  B4D8               	btfsc	status,2,c
  1497  007BD0  5C53               	subwf	p321@i,w,c
  1498  007BD2  B0D8               	btfsc	status,0,c
  1499  007BD4  D02F               	goto	l1679
  1500                           
  1501                           ;newmain.c: 518: for( j=0; j<8; j++ )
  1502  007BD6  0E00               	movlw	0
  1503  007BD8  6E52               	movwf	p321@j+1,c
  1504  007BDA  0E00               	movlw	0
  1505  007BDC  6E51               	movwf	p321@j,c
  1506  007BDE  5052               	movf	p321@j+1,w,c
  1507  007BE0  0A80               	xorlw	128
  1508  007BE2  0F80               	addlw	-128
  1509  007BE4  0E08               	movlw	8
  1510  007BE6  B4D8               	btfsc	status,2,c
  1511  007BE8  5C51               	subwf	p321@j,w,c
  1512  007BEA  B0D8               	btfsc	status,0,c
  1513  007BEC  D020               	goto	l1675
  1514                           
  1515                           ;newmain.c: 519: mm[i][j] = 0;
  1516  007BEE  C053  F00D         	movff	p321@i,??_p321
  1517  007BF2  C054  F00E         	movff	p321@i+1,??_p321+1
  1518  007BF6  90D8               	bcf	status,0,c
  1519  007BF8  360D               	rlcf	??_p321,f,c
  1520  007BFA  360E               	rlcf	??_p321+1,f,c
  1521  007BFC  90D8               	bcf	status,0,c
  1522  007BFE  360D               	rlcf	??_p321,f,c
  1523  007C00  360E               	rlcf	??_p321+1,f,c
  1524  007C02  90D8               	bcf	status,0,c
  1525  007C04  360D               	rlcf	??_p321,f,c
  1526  007C06  360E               	rlcf	??_p321+1,f,c
  1527  007C08  0E11               	movlw	low p321@mm
  1528  007C0A  6E0F               	movwf	(??_p321+2)& (0+255),c
  1529  007C0C  0E00               	movlw	high p321@mm
  1530  007C0E  6E10               	movwf	(??_p321+3)& (0+255),c
  1531  007C10  500D               	movf	??_p321,w,c
  1532  007C12  260F               	addwf	??_p321+2,f,c
  1533  007C14  500E               	movf	??_p321+1,w,c
  1534  007C16  2210               	addwfc	??_p321+3,f,c
  1535  007C18  5051               	movf	p321@j,w,c
  1536  007C1A  240F               	addwf	??_p321+2,w,c
  1537  007C1C  6ED9               	movwf	fsr2l,c
  1538  007C1E  5052               	movf	p321@j+1,w,c
  1539  007C20  2010               	addwfc	??_p321+3,w,c
  1540  007C22  6EDA               	movwf	fsr2h,c
  1541  007C24  0E00               	movlw	0
  1542  007C26  6EDF               	movwf	indf2,c
  1543  007C28  4A51               	infsnz	p321@j,f,c
  1544  007C2A  2A52               	incf	p321@j+1,f,c
  1545  007C2C  D7D8               	goto	L14
  1546  007C2E                     l1675:
  1547  007C2E  4A53               	infsnz	p321@i,f,c
  1548  007C30  2A54               	incf	p321@i+1,f,c
  1549  007C32  D7C9               	goto	L15
  1550  007C34                     l1679:
  1551                           
  1552                           ;newmain.c: 521: mm[1][3] = 1;
  1553  007C34  0E01               	movlw	1
  1554  007C36  6E1C               	movwf	p321@mm+11,c
  1555                           
  1556                           ;newmain.c: 522: mm[2][4] = 1;
  1557  007C38  0E01               	movlw	1
  1558  007C3A  6E25               	movwf	p321@mm+20,c
  1559                           
  1560                           ;newmain.c: 523: mm[2][3] = 1;
  1561  007C3C  0E01               	movlw	1
  1562  007C3E  6E24               	movwf	p321@mm+19,c
  1563                           
  1564                           ;newmain.c: 524: mm[3][3] = 1;
  1565  007C40  0E01               	movlw	1
  1566  007C42  6E2C               	movwf	p321@mm+27,c
  1567                           
  1568                           ;newmain.c: 525: mm[4][3] = 1;
  1569  007C44  0E01               	movlw	1
  1570  007C46  6E34               	movwf	p321@mm+35,c
  1571                           
  1572                           ;newmain.c: 526: mm[5][3] = 1;
  1573  007C48  0E01               	movlw	1
  1574  007C4A  6E3C               	movwf	p321@mm+43,c
  1575                           
  1576                           ;newmain.c: 527: mm[5][4] = 1;
  1577  007C4C  0E01               	movlw	1
  1578  007C4E  6E3D               	movwf	p321@mm+44,c
  1579                           
  1580                           ;newmain.c: 528: mm[5][2] = 1;
  1581  007C50  0E01               	movlw	1
  1582  007C52  6E3B               	movwf	p321@mm+42,c
  1583                           
  1584                           ;newmain.c: 531: for( i=0;i<200;i++ )
  1585  007C54  0E00               	movlw	0
  1586  007C56  6E54               	movwf	p321@i+1,c
  1587  007C58  0E00               	movlw	0
  1588  007C5A  6E53               	movwf	p321@i,c
  1589  007C5C  5054               	movf	p321@i+1,w,c
  1590  007C5E  0A80               	xorlw	128
  1591  007C60  0F80               	addlw	-128
  1592  007C62  0EC8               	movlw	200
  1593  007C64  B4D8               	btfsc	status,2,c
  1594  007C66  5C53               	subwf	p321@i,w,c
  1595  007C68  B0D8               	btfsc	status,0,c
  1596  007C6A  D009               	goto	l243
  1597                           
  1598                           ;newmain.c: 532: DrawMatris( mm );
  1599  007C6C  0E00               	movlw	high p321@mm
  1600  007C6E  6E04               	movwf	DrawMatris@matris+1,c
  1601  007C70  0E11               	movlw	low p321@mm
  1602  007C72  6E03               	movwf	DrawMatris@matris,c
  1603  007C74  EC2F  F03A         	call	_DrawMatris	;wreg free
  1604  007C78  4A53               	infsnz	p321@i,f,c
  1605  007C7A  2A54               	incf	p321@i+1,f,c
  1606  007C7C  D7EF               	goto	L16
  1607  007C7E                     l243:
  1608                           
  1609                           ;newmain.c: 535: LATB0 = 1;
  1610  007C7E  808A               	bsf	3978,0,c	;volatile
  1611                           
  1612                           ;newmain.c: 536: LATB1 = 1;
  1613  007C80  828A               	bsf	3978,1,c	;volatile
  1614                           
  1615                           ;newmain.c: 537: LATB2 = 1;
  1616  007C82  848A               	bsf	3978,2,c	;volatile
  1617                           
  1618                           ;newmain.c: 538: LATB3 = 1;
  1619  007C84  868A               	bsf	3978,3,c	;volatile
  1620                           
  1621                           ;newmain.c: 539: LATB4 = 1;
  1622  007C86  888A               	bsf	3978,4,c	;volatile
  1623                           
  1624                           ;newmain.c: 540: LATB5 = 1;
  1625  007C88  8A8A               	bsf	3978,5,c	;volatile
  1626                           
  1627                           ;newmain.c: 541: LATB6 = 1;
  1628  007C8A  8C8A               	bsf	3978,6,c	;volatile
  1629                           
  1630                           ;newmain.c: 542: LATB7 = 1;
  1631  007C8C  8E8A               	bsf	3978,7,c	;volatile
  1632                           
  1633                           ;newmain.c: 543: LATD0 = 0;
  1634  007C8E  908C               	bcf	3980,0,c	;volatile
  1635                           
  1636                           ;newmain.c: 544: LATD1 = 0;
  1637  007C90  928C               	bcf	3980,1,c	;volatile
  1638                           
  1639                           ;newmain.c: 545: LATD2 = 0;
  1640  007C92  948C               	bcf	3980,2,c	;volatile
  1641                           
  1642                           ;newmain.c: 546: LATD3 = 0;
  1643  007C94  968C               	bcf	3980,3,c	;volatile
  1644                           
  1645                           ;newmain.c: 547: LATD4 = 0;
  1646  007C96  988C               	bcf	3980,4,c	;volatile
  1647                           
  1648                           ;newmain.c: 548: LATD5 = 0;
  1649  007C98  9A8C               	bcf	3980,5,c	;volatile
  1650                           
  1651                           ;newmain.c: 549: LATD6 = 0;
  1652  007C9A  9C8C               	bcf	3980,6,c	;volatile
  1653                           
  1654                           ;newmain.c: 550: LATD7 = 0;
  1655  007C9C  9E8C               	bcf	3980,7,c	;volatile
  1656  007C9E  0012               	return	
  1657  007CA0                     __end_of_p321:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           indf2	equ	0xFDF
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _DrawMatris *****************
  1668 ;; Defined at:
  1669 ;;		line 322 in file "newmain.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  matris          2    2[COMRAM] PTR unsigned char [8]
  1672 ;;		 -> p321@mm(64), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  j               2   10[COMRAM] int 
  1675 ;;  i               2    8[COMRAM] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;		None               void
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1685 ;;      Params:         2       0       0       0       0       0       0       0       0
  1686 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1687 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1688 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1689 ;;Total ram usage:       10 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    1
  1692 ;; This function calls:
  1693 ;;		_Out_B
  1694 ;;		_Out_D
  1695 ;; This function is called by:
  1696 ;;		_p321
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701  00745E                     __ptext2:
  1702                           	opt stack 0
  1703  00745E                     _DrawMatris:
  1704                           	opt stack 28
  1705                           
  1706                           ;newmain.c: 324: int i,j=0;
  1707                           
  1708                           ;incstack = 0
  1709  00745E  0E00               	movlw	0
  1710  007460  6E0C               	movwf	DrawMatris@j+1,c
  1711  007462  0E00               	movlw	0
  1712  007464  6E0B               	movwf	DrawMatris@j,c
  1713                           
  1714                           ;newmain.c: 325: for( i=0; i<8; i++ )
  1715  007466  0E00               	movlw	0
  1716  007468  6E0A               	movwf	DrawMatris@i+1,c
  1717  00746A  0E00               	movlw	0
  1718  00746C  6E09               	movwf	DrawMatris@i,c
  1719  00746E  500A               	movf	DrawMatris@i+1,w,c
  1720  007470  0A80               	xorlw	128
  1721  007472  0F80               	addlw	-128
  1722  007474  0E08               	movlw	8
  1723  007476  B4D8               	btfsc	status,2,c
  1724  007478  5C09               	subwf	DrawMatris@i,w,c
  1725  00747A  B0D8               	btfsc	status,0,c
  1726  00747C  D079               	goto	l190
  1727                           
  1728                           ;newmain.c: 326: {
  1729                           ;newmain.c: 327: Out_D( i, 1 );
  1730  00747E  0E01               	movlw	1
  1731  007480  6E01               	movwf	Out_D@o,c
  1732  007482  5009               	movf	DrawMatris@i,w,c
  1733  007484  EC12  F039         	call	_Out_D
  1734                           
  1735                           ;newmain.c: 328: for( j=0; j<8; j++ )
  1736  007488  0E00               	movlw	0
  1737  00748A  6E0C               	movwf	DrawMatris@j+1,c
  1738  00748C  0E00               	movlw	0
  1739  00748E  6E0B               	movwf	DrawMatris@j,c
  1740  007490  500C               	movf	DrawMatris@j+1,w,c
  1741  007492  0A80               	xorlw	128
  1742  007494  0F80               	addlw	-128
  1743  007496  0E08               	movlw	8
  1744  007498  B4D8               	btfsc	status,2,c
  1745  00749A  5C0B               	subwf	DrawMatris@j,w,c
  1746  00749C  B0D8               	btfsc	status,0,c
  1747  00749E  D026               	goto	l1451
  1748                           
  1749                           ;newmain.c: 329: if( matris[i][j] == 1 )
  1750  0074A0  C009  F005         	movff	DrawMatris@i,??_DrawMatris
  1751  0074A4  C00A  F006         	movff	DrawMatris@i+1,??_DrawMatris+1
  1752  0074A8  90D8               	bcf	status,0,c
  1753  0074AA  3605               	rlcf	??_DrawMatris,f,c
  1754  0074AC  3606               	rlcf	??_DrawMatris+1,f,c
  1755  0074AE  90D8               	bcf	status,0,c
  1756  0074B0  3605               	rlcf	??_DrawMatris,f,c
  1757  0074B2  3606               	rlcf	??_DrawMatris+1,f,c
  1758  0074B4  90D8               	bcf	status,0,c
  1759  0074B6  3605               	rlcf	??_DrawMatris,f,c
  1760  0074B8  3606               	rlcf	??_DrawMatris+1,f,c
  1761  0074BA  C003  F007         	movff	DrawMatris@matris,??_DrawMatris+2
  1762  0074BE  C004  F008         	movff	DrawMatris@matris+1,??_DrawMatris+3
  1763  0074C2  5005               	movf	??_DrawMatris,w,c
  1764  0074C4  2607               	addwf	??_DrawMatris+2,f,c
  1765  0074C6  5006               	movf	??_DrawMatris+1,w,c
  1766  0074C8  2208               	addwfc	??_DrawMatris+3,f,c
  1767  0074CA  500B               	movf	DrawMatris@j,w,c
  1768  0074CC  2407               	addwf	??_DrawMatris+2,w,c
  1769  0074CE  6ED9               	movwf	fsr2l,c
  1770  0074D0  500C               	movf	DrawMatris@j+1,w,c
  1771  0074D2  2008               	addwfc	??_DrawMatris+3,w,c
  1772  0074D4  6EDA               	movwf	fsr2h,c
  1773  0074D6  0E01               	movlw	1
  1774  0074D8  62DF               	cpfseq	indf2,c
  1775  0074DA  D005               	goto	l1447
  1776                           
  1777                           ;newmain.c: 330: Out_B( j, 0 );
  1778  0074DC  0E00               	movlw	0
  1779  0074DE  6E01               	movwf	Out_B@o,c
  1780  0074E0  500B               	movf	DrawMatris@j,w,c
  1781  0074E2  ECBE  F038         	call	_Out_B
  1782  0074E6                     l1447:
  1783  0074E6  4A0B               	infsnz	DrawMatris@j,f,c
  1784  0074E8  2A0C               	incf	DrawMatris@j+1,f,c
  1785  0074EA  D7D2               	goto	L17
  1786  0074EC                     l1451:
  1787                           
  1788                           ;newmain.c: 332: _delay((unsigned long)((1)*(20000000/4000.0)));
  1789  0074EC  0E07               	movlw	7
  1790  0074EE  6E05               	movwf	??_DrawMatris& (0+255),c
  1791  0074F0  0E7D               	movlw	125
  1792  0074F2                     u2107:
  1793  0074F2  2EE8               	decfsz	wreg,f,c
  1794  0074F4  D7FE               	goto	u2107
  1795  0074F6  2E05               	decfsz	??_DrawMatris& (0+255),f,c
  1796  0074F8  D7FC               	goto	u2107
  1797  0074FA  F000               	nop	
  1798                           
  1799                           ;newmain.c: 334: for( j=0; j<8; j++ )
  1800  0074FC  0E00               	movlw	0
  1801  0074FE  6E0C               	movwf	DrawMatris@j+1,c
  1802  007500  0E00               	movlw	0
  1803  007502  6E0B               	movwf	DrawMatris@j,c
  1804  007504  500C               	movf	DrawMatris@j+1,w,c
  1805  007506  0A80               	xorlw	128
  1806  007508  0F80               	addlw	-128
  1807  00750A  0E08               	movlw	8
  1808  00750C  B4D8               	btfsc	status,2,c
  1809  00750E  5C0B               	subwf	DrawMatris@j,w,c
  1810  007510  B0D8               	btfsc	status,0,c
  1811  007512  D026               	goto	l1467
  1812                           
  1813                           ;newmain.c: 335: if( matris[i][j] == 1 )
  1814  007514  C009  F005         	movff	DrawMatris@i,??_DrawMatris
  1815  007518  C00A  F006         	movff	DrawMatris@i+1,??_DrawMatris+1
  1816  00751C  90D8               	bcf	status,0,c
  1817  00751E  3605               	rlcf	??_DrawMatris,f,c
  1818  007520  3606               	rlcf	??_DrawMatris+1,f,c
  1819  007522  90D8               	bcf	status,0,c
  1820  007524  3605               	rlcf	??_DrawMatris,f,c
  1821  007526  3606               	rlcf	??_DrawMatris+1,f,c
  1822  007528  90D8               	bcf	status,0,c
  1823  00752A  3605               	rlcf	??_DrawMatris,f,c
  1824  00752C  3606               	rlcf	??_DrawMatris+1,f,c
  1825  00752E  C003  F007         	movff	DrawMatris@matris,??_DrawMatris+2
  1826  007532  C004  F008         	movff	DrawMatris@matris+1,??_DrawMatris+3
  1827  007536  5005               	movf	??_DrawMatris,w,c
  1828  007538  2607               	addwf	??_DrawMatris+2,f,c
  1829  00753A  5006               	movf	??_DrawMatris+1,w,c
  1830  00753C  2208               	addwfc	??_DrawMatris+3,f,c
  1831  00753E  500B               	movf	DrawMatris@j,w,c
  1832  007540  2407               	addwf	??_DrawMatris+2,w,c
  1833  007542  6ED9               	movwf	fsr2l,c
  1834  007544  500C               	movf	DrawMatris@j+1,w,c
  1835  007546  2008               	addwfc	??_DrawMatris+3,w,c
  1836  007548  6EDA               	movwf	fsr2h,c
  1837  00754A  0E01               	movlw	1
  1838  00754C  62DF               	cpfseq	indf2,c
  1839  00754E  D005               	goto	l1463
  1840                           
  1841                           ;newmain.c: 336: Out_B( j, 1 );
  1842  007550  0E01               	movlw	1
  1843  007552  6E01               	movwf	Out_B@o,c
  1844  007554  500B               	movf	DrawMatris@j,w,c
  1845  007556  ECBE  F038         	call	_Out_B
  1846  00755A                     l1463:
  1847  00755A  4A0B               	infsnz	DrawMatris@j,f,c
  1848  00755C  2A0C               	incf	DrawMatris@j+1,f,c
  1849  00755E  D7D2               	goto	L18
  1850  007560                     l1467:
  1851                           
  1852                           ;newmain.c: 337: Out_D( i, 0 );
  1853  007560  0E00               	movlw	0
  1854  007562  6E01               	movwf	Out_D@o,c
  1855  007564  5009               	movf	DrawMatris@i,w,c
  1856  007566  EC12  F039         	call	_Out_D
  1857  00756A  4A09               	infsnz	DrawMatris@i,f,c
  1858  00756C  2A0A               	incf	DrawMatris@i+1,f,c
  1859  00756E  D77F               	goto	L19
  1860  007570                     l190:
  1861  007570  0012               	return	
  1862  007572                     __end_of_DrawMatris:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           indf2	equ	0xFDF
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872 ;; *************** function _init *****************
  1873 ;; Defined at:
  1874 ;;		line 371 in file "newmain.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  j               2    9[COMRAM] int 
  1879 ;;  i               2    7[COMRAM] int 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;		None               void
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0
  1890 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1891 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1892 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1893 ;;Total ram usage:        8 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		_Delay1Second
  1898 ;;		_Out_B
  1899 ;;		_Out_D
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text3
  1906  0076A4                     __ptext3:
  1907                           	opt stack 0
  1908  0076A4                     _init:
  1909                           	opt stack 29
  1910                           
  1911                           ;newmain.c: 373: TRISBbits.RB0 = 0;
  1912                           
  1913                           ;incstack = 0
  1914  0076A4  9093               	bcf	3987,0,c	;volatile
  1915                           
  1916                           ;newmain.c: 374: TRISBbits.RB1 = 0;
  1917  0076A6  9293               	bcf	3987,1,c	;volatile
  1918                           
  1919                           ;newmain.c: 375: TRISBbits.RB2 = 0;
  1920  0076A8  9493               	bcf	3987,2,c	;volatile
  1921                           
  1922                           ;newmain.c: 376: TRISBbits.RB3 = 0;
  1923  0076AA  9693               	bcf	3987,3,c	;volatile
  1924                           
  1925                           ;newmain.c: 377: TRISBbits.RB4 = 0;
  1926  0076AC  9893               	bcf	3987,4,c	;volatile
  1927                           
  1928                           ;newmain.c: 378: TRISBbits.RB5 = 0;
  1929  0076AE  9A93               	bcf	3987,5,c	;volatile
  1930                           
  1931                           ;newmain.c: 379: TRISBbits.RB6 = 0;
  1932  0076B0  9C93               	bcf	3987,6,c	;volatile
  1933                           
  1934                           ;newmain.c: 380: TRISBbits.RB7 = 0;
  1935  0076B2  9E93               	bcf	3987,7,c	;volatile
  1936                           
  1937                           ;newmain.c: 381: TRISDbits.RD0 = 0;
  1938  0076B4  9095               	bcf	3989,0,c	;volatile
  1939                           
  1940                           ;newmain.c: 382: TRISDbits.RD1 = 0;
  1941  0076B6  9295               	bcf	3989,1,c	;volatile
  1942                           
  1943                           ;newmain.c: 383: TRISDbits.RD2 = 0;
  1944  0076B8  9495               	bcf	3989,2,c	;volatile
  1945                           
  1946                           ;newmain.c: 384: TRISDbits.RD3 = 0;
  1947  0076BA  9695               	bcf	3989,3,c	;volatile
  1948                           
  1949                           ;newmain.c: 385: TRISDbits.RD4 = 0;
  1950  0076BC  9895               	bcf	3989,4,c	;volatile
  1951                           
  1952                           ;newmain.c: 386: TRISDbits.RD5 = 0;
  1953  0076BE  9A95               	bcf	3989,5,c	;volatile
  1954                           
  1955                           ;newmain.c: 387: TRISDbits.RD6 = 0;
  1956  0076C0  9C95               	bcf	3989,6,c	;volatile
  1957                           
  1958                           ;newmain.c: 388: TRISDbits.RD7 = 0;
  1959  0076C2  9E95               	bcf	3989,7,c	;volatile
  1960                           
  1961                           ;newmain.c: 390: TRISCbits.RC1 = 1;
  1962  0076C4  8294               	bsf	3988,1,c	;volatile
  1963                           
  1964                           ;newmain.c: 391: TRISCbits.RC2 = 1;
  1965  0076C6  8494               	bsf	3988,2,c	;volatile
  1966                           
  1967                           ;newmain.c: 393: TRISCbits.RC6 = 1;
  1968  0076C8  8C94               	bsf	3988,6,c	;volatile
  1969                           
  1970                           ;newmain.c: 394: TRISCbits.RC7 = 1;
  1971  0076CA  8E94               	bsf	3988,7,c	;volatile
  1972                           
  1973                           ;newmain.c: 396: LATB0 = 0;
  1974  0076CC  908A               	bcf	3978,0,c	;volatile
  1975                           
  1976                           ;newmain.c: 397: LATB1 = 0;
  1977  0076CE  928A               	bcf	3978,1,c	;volatile
  1978                           
  1979                           ;newmain.c: 398: LATB2 = 0;
  1980  0076D0  948A               	bcf	3978,2,c	;volatile
  1981                           
  1982                           ;newmain.c: 399: LATB3 = 0;
  1983  0076D2  968A               	bcf	3978,3,c	;volatile
  1984                           
  1985                           ;newmain.c: 400: LATB4 = 0;
  1986  0076D4  988A               	bcf	3978,4,c	;volatile
  1987                           
  1988                           ;newmain.c: 401: LATB5 = 0;
  1989  0076D6  9A8A               	bcf	3978,5,c	;volatile
  1990                           
  1991                           ;newmain.c: 402: LATB6 = 0;
  1992  0076D8  9C8A               	bcf	3978,6,c	;volatile
  1993                           
  1994                           ;newmain.c: 403: LATB7 = 0;
  1995  0076DA  9E8A               	bcf	3978,7,c	;volatile
  1996                           
  1997                           ;newmain.c: 404: LATD0 = 1;
  1998  0076DC  808C               	bsf	3980,0,c	;volatile
  1999                           
  2000                           ;newmain.c: 405: LATD1 = 1;
  2001  0076DE  828C               	bsf	3980,1,c	;volatile
  2002                           
  2003                           ;newmain.c: 406: LATD2 = 1;
  2004  0076E0  848C               	bsf	3980,2,c	;volatile
  2005                           
  2006                           ;newmain.c: 407: LATD3 = 1;
  2007  0076E2  868C               	bsf	3980,3,c	;volatile
  2008                           
  2009                           ;newmain.c: 408: LATD4 = 1;
  2010  0076E4  888C               	bsf	3980,4,c	;volatile
  2011                           
  2012                           ;newmain.c: 409: LATD5 = 1;
  2013  0076E6  8A8C               	bsf	3980,5,c	;volatile
  2014                           
  2015                           ;newmain.c: 410: LATD6 = 1;
  2016  0076E8  8C8C               	bsf	3980,6,c	;volatile
  2017                           
  2018                           ;newmain.c: 411: LATD7 = 1;
  2019  0076EA  8E8C               	bsf	3980,7,c	;volatile
  2020                           
  2021                           ;newmain.c: 413: int i,j=0;
  2022  0076EC  0E00               	movlw	0
  2023  0076EE  6E0B               	movwf	init@j+1,c
  2024  0076F0  0E00               	movlw	0
  2025  0076F2  6E0A               	movwf	init@j,c
  2026                           
  2027                           ;newmain.c: 414: for( i=0; i<40; i++ )
  2028  0076F4  0E00               	movlw	0
  2029  0076F6  6E09               	movwf	init@i+1,c
  2030  0076F8  0E00               	movlw	0
  2031  0076FA  6E08               	movwf	init@i,c
  2032  0076FC  5009               	movf	init@i+1,w,c
  2033  0076FE  0A80               	xorlw	128
  2034  007700  0F80               	addlw	-128
  2035  007702  0E28               	movlw	40
  2036  007704  B4D8               	btfsc	status,2,c
  2037  007706  5C08               	subwf	init@i,w,c
  2038  007708  B0D8               	btfsc	status,0,c
  2039  00770A  D029               	goto	l1587
  2040                           
  2041                           ;newmain.c: 415: for( j=0; j<2; j++ )
  2042  00770C  0E00               	movlw	0
  2043  00770E  6E0B               	movwf	init@j+1,c
  2044  007710  0E00               	movlw	0
  2045  007712  6E0A               	movwf	init@j,c
  2046  007714  500B               	movf	init@j+1,w,c
  2047  007716  0A80               	xorlw	128
  2048  007718  0F80               	addlw	-128
  2049  00771A  0E02               	movlw	2
  2050  00771C  B4D8               	btfsc	status,2,c
  2051  00771E  5C0A               	subwf	init@j,w,c
  2052  007720  B0D8               	btfsc	status,0,c
  2053  007722  D01A               	goto	l1583
  2054                           
  2055                           ;newmain.c: 416: snake[i][j] = 0;
  2056  007724  C008  F004         	movff	init@i,??_init
  2057  007728  C009  F005         	movff	init@i+1,??_init+1
  2058  00772C  90D8               	bcf	status,0,c
  2059  00772E  3604               	rlcf	??_init,f,c
  2060  007730  3605               	rlcf	??_init+1,f,c
  2061  007732  0E60               	movlw	low _snake
  2062  007734  6E06               	movwf	(??_init+2)& (0+255),c
  2063  007736  0E00               	movlw	high _snake
  2064  007738  6E07               	movwf	(??_init+3)& (0+255),c
  2065  00773A  5004               	movf	??_init,w,c
  2066  00773C  2606               	addwf	??_init+2,f,c
  2067  00773E  5005               	movf	??_init+1,w,c
  2068  007740  2207               	addwfc	??_init+3,f,c
  2069  007742  500A               	movf	init@j,w,c
  2070  007744  2406               	addwf	??_init+2,w,c
  2071  007746  6ED9               	movwf	fsr2l,c
  2072  007748  500B               	movf	init@j+1,w,c
  2073  00774A  2007               	addwfc	??_init+3,w,c
  2074  00774C  6EDA               	movwf	fsr2h,c
  2075  00774E  0E00               	movlw	0
  2076  007750  6EDF               	movwf	indf2,c
  2077  007752  4A0A               	infsnz	init@j,f,c
  2078  007754  2A0B               	incf	init@j+1,f,c
  2079  007756  D7DE               	goto	L20
  2080  007758                     l1583:
  2081  007758  4A08               	infsnz	init@i,f,c
  2082  00775A  2A09               	incf	init@i+1,f,c
  2083  00775C  D7CF               	goto	L21
  2084  00775E                     l1587:
  2085                           
  2086                           ;newmain.c: 419: Delay1Second();
  2087  00775E  ECDC  F037         	call	_Delay1Second	;wreg free
  2088                           
  2089                           ;newmain.c: 421: Out_B(0,1);
  2090  007762  0E01               	movlw	1
  2091  007764  6E01               	movwf	Out_B@o,c
  2092  007766  0E00               	movlw	0
  2093  007768  ECBE  F038         	call	_Out_B
  2094                           
  2095                           ;newmain.c: 422: Out_B(1,1);
  2096  00776C  0E01               	movlw	1
  2097  00776E  6E01               	movwf	Out_B@o,c
  2098  007770  0E01               	movlw	1
  2099  007772  ECBE  F038         	call	_Out_B
  2100                           
  2101                           ;newmain.c: 423: Out_B(2,1);
  2102  007776  0E01               	movlw	1
  2103  007778  6E01               	movwf	Out_B@o,c
  2104  00777A  0E02               	movlw	2
  2105  00777C  ECBE  F038         	call	_Out_B
  2106                           
  2107                           ;newmain.c: 424: Out_B(3,1);
  2108  007780  0E01               	movlw	1
  2109  007782  6E01               	movwf	Out_B@o,c
  2110  007784  0E03               	movlw	3
  2111  007786  ECBE  F038         	call	_Out_B
  2112                           
  2113                           ;newmain.c: 425: Out_B(4,1);
  2114  00778A  0E01               	movlw	1
  2115  00778C  6E01               	movwf	Out_B@o,c
  2116  00778E  0E04               	movlw	4
  2117  007790  ECBE  F038         	call	_Out_B
  2118                           
  2119                           ;newmain.c: 426: Out_B(5,1);
  2120  007794  0E01               	movlw	1
  2121  007796  6E01               	movwf	Out_B@o,c
  2122  007798  0E05               	movlw	5
  2123  00779A  ECBE  F038         	call	_Out_B
  2124                           
  2125                           ;newmain.c: 427: Out_B(6,1);
  2126  00779E  0E01               	movlw	1
  2127  0077A0  6E01               	movwf	Out_B@o,c
  2128  0077A2  0E06               	movlw	6
  2129  0077A4  ECBE  F038         	call	_Out_B
  2130                           
  2131                           ;newmain.c: 428: Out_B(7,1);
  2132  0077A8  0E01               	movlw	1
  2133  0077AA  6E01               	movwf	Out_B@o,c
  2134  0077AC  0E07               	movlw	7
  2135  0077AE  ECBE  F038         	call	_Out_B
  2136                           
  2137                           ;newmain.c: 430: Out_D(0,0);
  2138  0077B2  0E00               	movlw	0
  2139  0077B4  6E01               	movwf	Out_D@o,c
  2140  0077B6  0E00               	movlw	0
  2141  0077B8  EC12  F039         	call	_Out_D
  2142                           
  2143                           ;newmain.c: 431: Out_D(1,0);
  2144  0077BC  0E00               	movlw	0
  2145  0077BE  6E01               	movwf	Out_D@o,c
  2146  0077C0  0E01               	movlw	1
  2147  0077C2  EC12  F039         	call	_Out_D
  2148                           
  2149                           ;newmain.c: 432: Out_D(2,0);
  2150  0077C6  0E00               	movlw	0
  2151  0077C8  6E01               	movwf	Out_D@o,c
  2152  0077CA  0E02               	movlw	2
  2153  0077CC  EC12  F039         	call	_Out_D
  2154                           
  2155                           ;newmain.c: 433: Out_D(3,0);
  2156  0077D0  0E00               	movlw	0
  2157  0077D2  6E01               	movwf	Out_D@o,c
  2158  0077D4  0E03               	movlw	3
  2159  0077D6  EC12  F039         	call	_Out_D
  2160                           
  2161                           ;newmain.c: 434: Out_D(4,0);
  2162  0077DA  0E00               	movlw	0
  2163  0077DC  6E01               	movwf	Out_D@o,c
  2164  0077DE  0E04               	movlw	4
  2165  0077E0  EC12  F039         	call	_Out_D
  2166                           
  2167                           ;newmain.c: 435: Out_D(5,0);
  2168  0077E4  0E00               	movlw	0
  2169  0077E6  6E01               	movwf	Out_D@o,c
  2170  0077E8  0E05               	movlw	5
  2171  0077EA  EC12  F039         	call	_Out_D
  2172                           
  2173                           ;newmain.c: 436: Out_D(6,0);
  2174  0077EE  0E00               	movlw	0
  2175  0077F0  6E01               	movwf	Out_D@o,c
  2176  0077F2  0E06               	movlw	6
  2177  0077F4  EC12  F039         	call	_Out_D
  2178                           
  2179                           ;newmain.c: 437: Out_D(7,0);
  2180  0077F8  0E00               	movlw	0
  2181  0077FA  6E01               	movwf	Out_D@o,c
  2182  0077FC  0E07               	movlw	7
  2183  0077FE  EC12  F039         	call	_Out_D
  2184  007802  0012               	return	
  2185  007804                     __end_of_init:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           indf2	equ	0xFDF
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _Delay1Second *****************
  2196 ;; Defined at:
  2197 ;;		line 554 in file "newmain.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  i               2    1[COMRAM] int 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_init
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text4
  2225  006FB8                     __ptext4:
  2226                           	opt stack 0
  2227  006FB8                     _Delay1Second:
  2228                           	opt stack 29
  2229                           
  2230                           ;newmain.c: 556: int i=0;
  2231                           
  2232                           ;incstack = 0
  2233  006FB8  0E00               	movlw	0
  2234  006FBA  6E03               	movwf	Delay1Second@i+1,c
  2235  006FBC  0E00               	movlw	0
  2236  006FBE  6E02               	movwf	Delay1Second@i,c
  2237                           
  2238                           ;newmain.c: 557: for(i=0;i<100;i++)
  2239  006FC0  0E00               	movlw	0
  2240  006FC2  6E03               	movwf	Delay1Second@i+1,c
  2241  006FC4  0E00               	movlw	0
  2242  006FC6  6E02               	movwf	Delay1Second@i,c
  2243  006FC8  5003               	movf	Delay1Second@i+1,w,c
  2244  006FCA  0A80               	xorlw	128
  2245  006FCC  0F80               	addlw	-128
  2246  006FCE  0E64               	movlw	100
  2247  006FD0  B4D8               	btfsc	status,2,c
  2248  006FD2  5C02               	subwf	Delay1Second@i,w,c
  2249  006FD4  B0D8               	btfsc	status,0,c
  2250  006FD6  D00B               	goto	l249
  2251                           
  2252                           ;newmain.c: 558: _delay((unsigned long)((10)*(20000000/4000.0)));
  2253  006FD8  0E41               	movlw	65
  2254  006FDA  6E01               	movwf	??_Delay1Second& (0+255),c
  2255  006FDC  0EEE               	movlw	238
  2256  006FDE                     u2117:
  2257  006FDE  2EE8               	decfsz	wreg,f,c
  2258  006FE0  D7FE               	goto	u2117
  2259  006FE2  2E01               	decfsz	??_Delay1Second& (0+255),f,c
  2260  006FE4  D7FC               	goto	u2117
  2261  006FE6  D000               	nop2	
  2262  006FE8  4A02               	infsnz	Delay1Second@i,f,c
  2263  006FEA  2A03               	incf	Delay1Second@i+1,f,c
  2264  006FEC  D7ED               	goto	L22
  2265  006FEE                     l249:
  2266  006FEE  0012               	return	
  2267  006FF0                     __end_of_Delay1Second:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           indf2	equ	0xFDF
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function ___wmul *****************
  2278 ;; Defined at:
  2279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  multiplier      2    6[COMRAM] unsigned int 
  2282 ;;  multiplicand    2    8[COMRAM] unsigned int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  product         2   10[COMRAM] unsigned int 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    6[COMRAM] unsigned int 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, prodl, prodh
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2294 ;;      Params:         4       0       0       0       0       0       0       0       0
  2295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2297 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        6 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text5
  2308  006F92                     __ptext5:
  2309                           	opt stack 0
  2310  006F92                     ___wmul:
  2311                           	opt stack 30
  2312                           
  2313                           ;incstack = 0
  2314  006F92  5007               	movf	___wmul@multiplier,w,c
  2315  006F94  0209               	mulwf	___wmul@multiplicand,c
  2316  006F96  CFF3 F00B          	movff	prodl,___wmul@product
  2317  006F9A  CFF4 F00C          	movff	prodh,___wmul@product+1
  2318  006F9E  5007               	movf	___wmul@multiplier,w,c
  2319  006FA0  020A               	mulwf	___wmul@multiplicand+1,c
  2320  006FA2  50F3               	movf	prodl,w,c
  2321  006FA4  260C               	addwf	___wmul@product+1,f,c
  2322  006FA6  5008               	movf	___wmul@multiplier+1,w,c
  2323  006FA8  0209               	mulwf	___wmul@multiplicand,c
  2324  006FAA  50F3               	movf	prodl,w,c
  2325  006FAC  260C               	addwf	___wmul@product+1,f,c
  2326  006FAE  C00B  F007         	movff	___wmul@product,?___wmul
  2327  006FB2  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  2328  006FB6  0012               	return	
  2329  006FB8                     __end_of___wmul:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           prodh	equ	0xFF4
  2333                           prodl	equ	0xFF3
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _PlaceFeed *****************
  2342 ;; Defined at:
  2343 ;;		line 264 in file "newmain.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  s               2    8[COMRAM] int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  it              2   12[COMRAM] int 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2    8[COMRAM] int 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         2       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        6 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    1
  2364 ;; This function calls:
  2365 ;;		___awdiv
  2366 ;;		___awmod
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text6
  2373  0072CC                     __ptext6:
  2374                           	opt stack 0
  2375  0072CC                     _PlaceFeed:
  2376                           	opt stack 29
  2377                           
  2378                           ;newmain.c: 266: size++;
  2379                           
  2380                           ;incstack = 0
  2381  0072CC  0100               	movlb	0	; () banked
  2382  0072CE  4BB4               	infsnz	_size& (0+255),f,b
  2383  0072D0  2BB5               	incf	(_size+1)& (0+255),f,b
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;newmain.c: 267: feedx = s%8;
  2387  0072D2  5009               	movf	PlaceFeed@s,w,c
  2388  0072D4  0B07               	andlw	7
  2389  0072D6  6E5E               	movwf	_feedx,c
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;newmain.c: 268: feedy = s/8;
  2393  0072D8  C009  F001         	movff	PlaceFeed@s,___awdiv@dividend
  2394  0072DC  C00A  F002         	movff	PlaceFeed@s+1,___awdiv@dividend+1
  2395  0072E0  0E00               	movlw	0
  2396  0072E2  6E04               	movwf	___awdiv@divisor+1,c
  2397  0072E4  0E08               	movlw	8
  2398  0072E6  6E03               	movwf	___awdiv@divisor,c
  2399  0072E8  EC6C  F038         	call	___awdiv	;wreg free
  2400  0072EC  5001               	movf	?___awdiv,w,c
  2401  0072EE  6E5F               	movwf	_feedy,c
  2402                           
  2403                           ;newmain.c: 270: int it = start;
  2404  0072F0  C05C  F00D         	movff	_start,PlaceFeed@it
  2405  0072F4  C05D  F00E         	movff	_start+1,PlaceFeed@it+1
  2406  0072F8                     l1701:
  2407                           
  2408                           ;newmain.c: 272: {
  2409                           ;newmain.c: 273: it = (it%40);
  2410  0072F8  C00D  F001         	movff	PlaceFeed@it,___awmod@dividend
  2411  0072FC  C00E  F002         	movff	PlaceFeed@it+1,___awmod@dividend+1
  2412  007300  0E00               	movlw	0
  2413  007302  6E04               	movwf	___awmod@divisor+1,c
  2414  007304  0E28               	movlw	40
  2415  007306  6E03               	movwf	___awmod@divisor,c
  2416  007308  EC24  F038         	call	___awmod	;wreg free
  2417  00730C  C001  F00D         	movff	?___awmod,PlaceFeed@it
  2418  007310  C002  F00E         	movff	?___awmod+1,PlaceFeed@it+1
  2419                           
  2420                           ;newmain.c: 274: if( it == end )
  2421  007314  0100               	movlb	0	; () banked
  2422  007316  51B3               	movf	(_end+1)& (0+255),w,b
  2423  007318  180E               	xorwf	PlaceFeed@it+1,w,c
  2424  00731A  E103               	bnz	u1665
  2425  00731C  0100               	movlb	0	; () banked
  2426  00731E  51B2               	movf	_end& (0+255),w,b
  2427  007320  180D               	xorwf	PlaceFeed@it,w,c
  2428  007322                     u1665:
  2429  007322  B4D8               	btfsc	status,2,c
  2430  007324  D02D               	goto	l1717
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;newmain.c: 277: if( snake[it][0] == feedx && snake[it][1] == feedy )
  2434                           
  2435                           ; BSR set to: 0
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;newmain.c: 275: break;
  2439  007326  0E60               	movlw	low _snake
  2440  007328  6E0B               	movwf	??_PlaceFeed& (0+255),c
  2441  00732A  0E00               	movlw	high _snake
  2442  00732C  6E0C               	movwf	(??_PlaceFeed+1)& (0+255),c
  2443  00732E  90D8               	bcf	status,0,c
  2444  007330  340D               	rlcf	PlaceFeed@it,w,c
  2445  007332  6ED9               	movwf	fsr2l,c
  2446  007334  340E               	rlcf	PlaceFeed@it+1,w,c
  2447  007336  6EDA               	movwf	fsr2h,c
  2448  007338  500B               	movf	??_PlaceFeed,w,c
  2449  00733A  26D9               	addwf	fsr2l,f,c
  2450  00733C  500C               	movf	??_PlaceFeed+1,w,c
  2451  00733E  22DA               	addwfc	fsr2h,f,c
  2452  007340  505E               	movf	_feedx,w,c
  2453  007342  62DF               	cpfseq	indf2,c
  2454  007344  D01A               	goto	l1715
  2455                           
  2456                           ; BSR set to: 0
  2457  007346  C00D  F00B         	movff	PlaceFeed@it,??_PlaceFeed
  2458  00734A  C00E  F00C         	movff	PlaceFeed@it+1,??_PlaceFeed+1
  2459  00734E  90D8               	bcf	status,0,c
  2460  007350  360B               	rlcf	??_PlaceFeed,f,c
  2461  007352  360C               	rlcf	??_PlaceFeed+1,f,c
  2462  007354  0E01               	movlw	1
  2463  007356  260B               	addwf	??_PlaceFeed,f,c
  2464  007358  0E00               	movlw	0
  2465  00735A  220C               	addwfc	??_PlaceFeed+1,f,c
  2466  00735C  0100               	movlb	0	; () banked
  2467  00735E  0E60               	movlw	low _snake
  2468  007360  240B               	addwf	??_PlaceFeed,w,c
  2469  007362  6ED9               	movwf	fsr2l,c
  2470  007364  0100               	movlb	0	; () banked
  2471  007366  0E00               	movlw	high _snake
  2472  007368  200C               	addwfc	??_PlaceFeed+1,w,c
  2473  00736A  6EDA               	movwf	fsr2h,c
  2474  00736C  505F               	movf	_feedy,w,c
  2475  00736E  62DF               	cpfseq	indf2,c
  2476  007370  D004               	goto	l1715
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;newmain.c: 278: return 0;
  2480  007372  0E00               	movlw	0
  2481  007374  6E0A               	movwf	?_PlaceFeed+1,c
  2482  007376  0E00               	movlw	0
  2483  007378  D006               	goto	L23
  2484  00737A                     l1715:
  2485                           
  2486                           ; BSR set to: 0
  2487  00737A  4A0D               	infsnz	PlaceFeed@it,f,c
  2488  00737C  2A0E               	incf	PlaceFeed@it+1,f,c
  2489  00737E  D7BC               	goto	l1701
  2490  007380                     l1717:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;newmain.c: 279: }
  2494                           ;newmain.c: 280: return 1;
  2495  007380  0E00               	movlw	0
  2496  007382  6E0A               	movwf	?_PlaceFeed+1,c
  2497  007384  0E01               	movlw	1
  2498  007386                     L23:
  2499  007386  6E09               	movwf	?_PlaceFeed,c
  2500                           
  2501                           ; BSR set to: 0
  2502                           
  2503                           ; BSR set to: 0
  2504  007388  0012               	return	
  2505  00738A                     __end_of_PlaceFeed:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           prodh	equ	0xFF4
  2509                           prodl	equ	0xFF3
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           indf2	equ	0xFDF
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function ___awdiv *****************
  2518 ;; Defined at:
  2519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  dividend        2    0[COMRAM] int 
  2522 ;;  divisor         2    2[COMRAM] int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  quotient        2    6[COMRAM] int 
  2525 ;;  sign            1    5[COMRAM] unsigned char 
  2526 ;;  counter         1    4[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[COMRAM] int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, prodl
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         4       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        8 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;;		_PlaceFeed
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text7
  2551  0070D8                     __ptext7:
  2552                           	opt stack 0
  2553  0070D8                     ___awdiv:
  2554                           	opt stack 30
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;incstack = 0
  2558  0070D8  0E00               	movlw	0
  2559  0070DA  6E06               	movwf	___awdiv@sign,c
  2560  0070DC  5004               	movf	___awdiv@divisor+1,w,c
  2561  0070DE  0A80               	xorlw	128
  2562  0070E0  6EF3               	movwf	prodl,c
  2563  0070E2  0E80               	movlw	128
  2564  0070E4  5CF3               	subwf	prodl,w,c
  2565  0070E6  0E00               	movlw	0
  2566  0070E8  B4D8               	btfsc	status,2,c
  2567  0070EA  5C03               	subwf	___awdiv@divisor,w,c
  2568  0070EC  B0D8               	btfsc	status,0,c
  2569  0070EE  D006               	goto	l1491
  2570  0070F0  6C03               	negf	___awdiv@divisor,c
  2571  0070F2  1E04               	comf	___awdiv@divisor+1,f,c
  2572  0070F4  B0D8               	btfsc	status,0,c
  2573  0070F6  2A04               	incf	___awdiv@divisor+1,f,c
  2574  0070F8  0E01               	movlw	1
  2575  0070FA  6E06               	movwf	___awdiv@sign,c
  2576  0070FC                     l1491:
  2577  0070FC  5002               	movf	___awdiv@dividend+1,w,c
  2578  0070FE  0A80               	xorlw	128
  2579  007100  6EF3               	movwf	prodl,c
  2580  007102  0E80               	movlw	128
  2581  007104  5CF3               	subwf	prodl,w,c
  2582  007106  0E00               	movlw	0
  2583  007108  B4D8               	btfsc	status,2,c
  2584  00710A  5C01               	subwf	___awdiv@dividend,w,c
  2585  00710C  B0D8               	btfsc	status,0,c
  2586  00710E  D006               	goto	l1497
  2587  007110  6C01               	negf	___awdiv@dividend,c
  2588  007112  1E02               	comf	___awdiv@dividend+1,f,c
  2589  007114  B0D8               	btfsc	status,0,c
  2590  007116  2A02               	incf	___awdiv@dividend+1,f,c
  2591  007118  0E01               	movlw	1
  2592  00711A  1A06               	xorwf	___awdiv@sign,f,c
  2593  00711C                     l1497:
  2594  00711C  0E00               	movlw	0
  2595  00711E  6E08               	movwf	___awdiv@quotient+1,c
  2596  007120  0E00               	movlw	0
  2597  007122  6E07               	movwf	___awdiv@quotient,c
  2598  007124  5004               	movf	___awdiv@divisor+1,w,c
  2599  007126  1003               	iorwf	___awdiv@divisor,w,c
  2600  007128  B4D8               	btfsc	status,2,c
  2601  00712A  D01C               	goto	l1519
  2602  00712C  0E01               	movlw	1
  2603  00712E  6E05               	movwf	___awdiv@counter,c
  2604  007130  D004               	goto	l1505
  2605  007132                     l1503:
  2606  007132  90D8               	bcf	status,0,c
  2607  007134  3603               	rlcf	___awdiv@divisor,f,c
  2608  007136  3604               	rlcf	___awdiv@divisor+1,f,c
  2609  007138  2A05               	incf	___awdiv@counter,f,c
  2610  00713A                     l1505:
  2611  00713A  AE04               	btfss	___awdiv@divisor+1,7,c
  2612  00713C  D7FA               	goto	l1503
  2613  00713E                     l1507:
  2614  00713E  90D8               	bcf	status,0,c
  2615  007140  3607               	rlcf	___awdiv@quotient,f,c
  2616  007142  3608               	rlcf	___awdiv@quotient+1,f,c
  2617  007144  5003               	movf	___awdiv@divisor,w,c
  2618  007146  5C01               	subwf	___awdiv@dividend,w,c
  2619  007148  5004               	movf	___awdiv@divisor+1,w,c
  2620  00714A  5802               	subwfb	___awdiv@dividend+1,w,c
  2621  00714C  A0D8               	btfss	status,0,c
  2622  00714E  D005               	goto	l1515
  2623  007150  5003               	movf	___awdiv@divisor,w,c
  2624  007152  5E01               	subwf	___awdiv@dividend,f,c
  2625  007154  5004               	movf	___awdiv@divisor+1,w,c
  2626  007156  5A02               	subwfb	___awdiv@dividend+1,f,c
  2627  007158  8007               	bsf	___awdiv@quotient,0,c
  2628  00715A                     l1515:
  2629  00715A  90D8               	bcf	status,0,c
  2630  00715C  3204               	rrcf	___awdiv@divisor+1,f,c
  2631  00715E  3203               	rrcf	___awdiv@divisor,f,c
  2632  007160  2E05               	decfsz	___awdiv@counter,f,c
  2633  007162  D7ED               	goto	l1507
  2634  007164                     l1519:
  2635  007164  5006               	movf	___awdiv@sign,w,c
  2636  007166  B4D8               	btfsc	status,2,c
  2637  007168  D004               	goto	l1523
  2638  00716A  6C07               	negf	___awdiv@quotient,c
  2639  00716C  1E08               	comf	___awdiv@quotient+1,f,c
  2640  00716E  B0D8               	btfsc	status,0,c
  2641  007170  2A08               	incf	___awdiv@quotient+1,f,c
  2642  007172                     l1523:
  2643  007172  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2644  007176  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2645  00717A  0012               	return	
  2646  00717C                     __end_of___awdiv:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           indf2	equ	0xFDF
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _Move *****************
  2659 ;; Defined at:
  2660 ;;		line 248 in file "newmain.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  ny              2    5[COMRAM] int 
  2665 ;;  nx              2    3[COMRAM] int 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        7 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text8
  2689  007572                     __ptext8:
  2690                           	opt stack 0
  2691  007572                     _Move:
  2692                           	opt stack 30
  2693                           
  2694                           ;newmain.c: 250: int nx=snake[start][0],ny=snake[start][1];
  2695                           
  2696                           ;incstack = 0
  2697  007572  0E60               	movlw	low _snake
  2698  007574  6E01               	movwf	??_Move& (0+255),c
  2699  007576  0E00               	movlw	high _snake
  2700  007578  6E02               	movwf	(??_Move+1)& (0+255),c
  2701  00757A  90D8               	bcf	status,0,c
  2702  00757C  345C               	rlcf	_start,w,c
  2703  00757E  6ED9               	movwf	fsr2l,c
  2704  007580  345D               	rlcf	_start+1,w,c
  2705  007582  6EDA               	movwf	fsr2h,c
  2706  007584  5001               	movf	??_Move,w,c
  2707  007586  26D9               	addwf	fsr2l,f,c
  2708  007588  5002               	movf	??_Move+1,w,c
  2709  00758A  22DA               	addwfc	fsr2h,f,c
  2710  00758C  50DF               	movf	indf2,w,c
  2711  00758E  6E03               	movwf	(??_Move+2)& (0+255),c
  2712  007590  5003               	movf	??_Move+2,w,c
  2713  007592  6E04               	movwf	Move@nx,c
  2714  007594  6A05               	clrf	Move@nx+1,c
  2715  007596  C05C  F001         	movff	_start,??_Move
  2716  00759A  C05D  F002         	movff	_start+1,??_Move+1
  2717  00759E  90D8               	bcf	status,0,c
  2718  0075A0  3601               	rlcf	??_Move,f,c
  2719  0075A2  3602               	rlcf	??_Move+1,f,c
  2720  0075A4  0E01               	movlw	1
  2721  0075A6  2601               	addwf	??_Move,f,c
  2722  0075A8  0E00               	movlw	0
  2723  0075AA  2202               	addwfc	??_Move+1,f,c
  2724  0075AC  0100               	movlb	0	; () banked
  2725  0075AE  0E60               	movlw	low _snake
  2726  0075B0  2401               	addwf	??_Move,w,c
  2727  0075B2  6ED9               	movwf	fsr2l,c
  2728  0075B4  0100               	movlb	0	; () banked
  2729  0075B6  0E00               	movlw	high _snake
  2730  0075B8  2002               	addwfc	??_Move+1,w,c
  2731  0075BA  6EDA               	movwf	fsr2h,c
  2732  0075BC  50DF               	movf	indf2,w,c
  2733  0075BE  6E03               	movwf	(??_Move+2)& (0+255),c
  2734  0075C0  5003               	movf	??_Move+2,w,c
  2735  0075C2  6E06               	movwf	Move@ny,c
  2736  0075C4  6A07               	clrf	Move@ny+1,c
  2737                           
  2738                           ;newmain.c: 251: switch( dir )
  2739  0075C6  D030               	goto	l1785
  2740  0075C8                     l1759:
  2741                           
  2742                           ; BSR set to: 0
  2743  0075C8  5007               	movf	Move@ny+1,w,c
  2744  0075CA  1006               	iorwf	Move@ny,w,c
  2745  0075CC  A4D8               	btfss	status,2,c
  2746  0075CE  D004               	goto	l1763
  2747                           
  2748                           ; BSR set to: 0
  2749  0075D0  0E00               	movlw	0
  2750  0075D2  6E07               	movwf	Move@ny+1,c
  2751  0075D4  0E08               	movlw	8
  2752  0075D6  6E06               	movwf	Move@ny,c
  2753  0075D8                     l1763:
  2754                           
  2755                           ; BSR set to: 0
  2756  0075D8  0606               	decf	Move@ny,f,c
  2757  0075DA  A0D8               	btfss	status,0,c
  2758  0075DC  0607               	decf	Move@ny+1,f,c
  2759  0075DE  D032               	goto	l1787
  2760  0075E0                     l1765:
  2761                           
  2762                           ; BSR set to: 0
  2763  0075E0  4A06               	infsnz	Move@ny,f,c
  2764  0075E2  2A07               	incf	Move@ny+1,f,c
  2765                           
  2766                           ; BSR set to: 0
  2767  0075E4  5006               	movf	Move@ny,w,c
  2768  0075E6  0A08               	xorlw	8
  2769  0075E8  1007               	iorwf	Move@ny+1,w,c
  2770  0075EA  A4D8               	btfss	status,2,c
  2771  0075EC  D02B               	goto	l1787
  2772                           
  2773                           ; BSR set to: 0
  2774  0075EE  0E00               	movlw	0
  2775  0075F0  6E07               	movwf	Move@ny+1,c
  2776  0075F2  0E00               	movlw	0
  2777  0075F4  6E06               	movwf	Move@ny,c
  2778  0075F6  D026               	goto	l1787
  2779  0075F8                     l1771:
  2780                           
  2781                           ; BSR set to: 0
  2782  0075F8  5005               	movf	Move@nx+1,w,c
  2783  0075FA  1004               	iorwf	Move@nx,w,c
  2784  0075FC  A4D8               	btfss	status,2,c
  2785  0075FE  D004               	goto	l1775
  2786                           
  2787                           ; BSR set to: 0
  2788  007600  0E00               	movlw	0
  2789  007602  6E05               	movwf	Move@nx+1,c
  2790  007604  0E08               	movlw	8
  2791  007606  6E04               	movwf	Move@nx,c
  2792  007608                     l1775:
  2793                           
  2794                           ; BSR set to: 0
  2795  007608  0604               	decf	Move@nx,f,c
  2796  00760A  A0D8               	btfss	status,0,c
  2797  00760C  0605               	decf	Move@nx+1,f,c
  2798  00760E  D01A               	goto	l1787
  2799  007610                     l1777:
  2800                           
  2801                           ; BSR set to: 0
  2802  007610  4A04               	infsnz	Move@nx,f,c
  2803  007612  2A05               	incf	Move@nx+1,f,c
  2804                           
  2805                           ; BSR set to: 0
  2806  007614  5004               	movf	Move@nx,w,c
  2807  007616  0A08               	xorlw	8
  2808  007618  1005               	iorwf	Move@nx+1,w,c
  2809  00761A  A4D8               	btfss	status,2,c
  2810  00761C  D013               	goto	l1787
  2811                           
  2812                           ; BSR set to: 0
  2813  00761E  0E00               	movlw	0
  2814  007620  6E05               	movwf	Move@nx+1,c
  2815  007622  0E00               	movlw	0
  2816  007624  6E04               	movwf	Move@nx,c
  2817  007626  D00E               	goto	l1787
  2818  007628                     l1785:
  2819                           
  2820                           ; BSR set to: 0
  2821  007628  0100               	movlb	0	; () banked
  2822  00762A  51B6               	movf	_dir& (0+255),w,b
  2823                           
  2824                           ; Switch size 1, requested type "space"
  2825                           ; Number of cases is 4, Range of values is 97 to 119
  2826                           ; switch strategies available:
  2827                           ; Name         Instructions Cycles
  2828                           ; simple_byte           13     7 (average)
  2829                           ;	Chosen strategy is simple_byte
  2830  00762C  0A61               	xorlw	97	; case 97
  2831  00762E  B4D8               	btfsc	status,2,c
  2832  007630  D7E3               	goto	l1771
  2833  007632  0A05               	xorlw	5	; case 100
  2834  007634  B4D8               	btfsc	status,2,c
  2835  007636  D7EC               	goto	l1777
  2836  007638  0A17               	xorlw	23	; case 115
  2837  00763A  B4D8               	btfsc	status,2,c
  2838  00763C  D7D1               	goto	l1765
  2839  00763E  0A04               	xorlw	4	; case 119
  2840  007640  B4D8               	btfsc	status,2,c
  2841  007642  D7C2               	goto	l1759
  2842  007644                     l1787:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;newmain.c: 258: if( start == 0 ) start = 40;
  2846  007644  505D               	movf	_start+1,w,c
  2847  007646  105C               	iorwf	_start,w,c
  2848  007648  A4D8               	btfss	status,2,c
  2849  00764A  D004               	goto	l1791
  2850                           
  2851                           ; BSR set to: 0
  2852  00764C  0E00               	movlw	0
  2853  00764E  6E5D               	movwf	_start+1,c
  2854  007650  0E28               	movlw	40
  2855  007652  6E5C               	movwf	_start,c
  2856  007654                     l1791:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;newmain.c: 259: start--;
  2860  007654  065C               	decf	_start,f,c
  2861  007656  A0D8               	btfss	status,0,c
  2862  007658  065D               	decf	_start+1,f,c
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;newmain.c: 260: snake[start][0] = nx;
  2866  00765A  0E60               	movlw	low _snake
  2867  00765C  6E01               	movwf	??_Move& (0+255),c
  2868  00765E  0E00               	movlw	high _snake
  2869  007660  6E02               	movwf	(??_Move+1)& (0+255),c
  2870  007662  90D8               	bcf	status,0,c
  2871  007664  345C               	rlcf	_start,w,c
  2872  007666  6ED9               	movwf	fsr2l,c
  2873  007668  345D               	rlcf	_start+1,w,c
  2874  00766A  6EDA               	movwf	fsr2h,c
  2875  00766C  5001               	movf	??_Move,w,c
  2876  00766E  26D9               	addwf	fsr2l,f,c
  2877  007670  5002               	movf	??_Move+1,w,c
  2878  007672  22DA               	addwfc	fsr2h,f,c
  2879  007674  C004  FFDF         	movff	Move@nx,indf2
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;newmain.c: 261: snake[start][1] = ny;
  2883  007678  C05C  F001         	movff	_start,??_Move
  2884  00767C  C05D  F002         	movff	_start+1,??_Move+1
  2885  007680  90D8               	bcf	status,0,c
  2886  007682  3601               	rlcf	??_Move,f,c
  2887  007684  3602               	rlcf	??_Move+1,f,c
  2888  007686  0E01               	movlw	1
  2889  007688  2601               	addwf	??_Move,f,c
  2890  00768A  0E00               	movlw	0
  2891  00768C  2202               	addwfc	??_Move+1,f,c
  2892  00768E  0100               	movlb	0	; () banked
  2893  007690  0E60               	movlw	low _snake
  2894  007692  2401               	addwf	??_Move,w,c
  2895  007694  6ED9               	movwf	fsr2l,c
  2896  007696  0100               	movlb	0	; () banked
  2897  007698  0E00               	movlw	high _snake
  2898  00769A  2002               	addwfc	??_Move+1,w,c
  2899  00769C  6EDA               	movwf	fsr2h,c
  2900  00769E  C006  FFDF         	movff	Move@ny,indf2
  2901                           
  2902                           ; BSR set to: 0
  2903  0076A2  0012               	return	
  2904  0076A4                     __end_of_Move:
  2905                           	opt stack 0
  2906                           tblptru	equ	0xFF8
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           indf2	equ	0xFDF
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _Init_Game *****************
  2917 ;; Defined at:
  2918 ;;		line 204 in file "newmain.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		wreg, status,2
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text9
  2946  006FF0                     __ptext9:
  2947                           	opt stack 0
  2948  006FF0                     _Init_Game:
  2949                           	opt stack 30
  2950                           
  2951                           ;newmain.c: 211: snake[0][0] = 2;
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;incstack = 0
  2955  006FF0  0E02               	movlw	2
  2956  006FF2  0100               	movlb	0	; () banked
  2957  006FF4  6F60               	movwf	_snake& (0+255),b
  2958                           
  2959                           ;newmain.c: 212: snake[0][1] = 2;
  2960  006FF6  0E02               	movlw	2
  2961  006FF8  0100               	movlb	0	; () banked
  2962  006FFA  6F61               	movwf	(_snake+1)& (0+255),b
  2963                           
  2964                           ;newmain.c: 214: snake[1][0] = 3;
  2965  006FFC  0E03               	movlw	3
  2966  006FFE  0100               	movlb	0	; () banked
  2967  007000  6F62               	movwf	(_snake+2)& (0+255),b
  2968                           
  2969                           ;newmain.c: 215: snake[1][1] = 2;
  2970  007002  0E02               	movlw	2
  2971  007004  0100               	movlb	0	; () banked
  2972  007006  6F63               	movwf	(_snake+3)& (0+255),b
  2973                           
  2974                           ;newmain.c: 217: snake[2][0] = 4;
  2975  007008  0E04               	movlw	4
  2976  00700A  0100               	movlb	0	; () banked
  2977  00700C  6F64               	movwf	(_snake+4)& (0+255),b
  2978                           
  2979                           ;newmain.c: 218: snake[2][1] = 2;
  2980  00700E  0E02               	movlw	2
  2981  007010  0100               	movlb	0	; () banked
  2982  007012  6F65               	movwf	(_snake+5)& (0+255),b
  2983                           
  2984                           ;newmain.c: 219: dir = 'a';
  2985  007014  0E61               	movlw	97
  2986  007016  0100               	movlb	0	; () banked
  2987  007018  6FB6               	movwf	_dir& (0+255),b
  2988                           
  2989                           ;newmain.c: 221: end = 3;
  2990  00701A  0E00               	movlw	0
  2991  00701C  0100               	movlb	0	; () banked
  2992  00701E  6FB3               	movwf	(_end+1)& (0+255),b
  2993  007020  0E03               	movlw	3
  2994  007022  0100               	movlb	0	; () banked
  2995  007024  6FB2               	movwf	_end& (0+255),b
  2996                           
  2997                           ;newmain.c: 222: start = 0;
  2998  007026  0E00               	movlw	0
  2999  007028  6E5D               	movwf	_start+1,c
  3000  00702A  0E00               	movlw	0
  3001  00702C  6E5C               	movwf	_start,c
  3002                           
  3003                           ;newmain.c: 224: size = 3;
  3004  00702E  0E00               	movlw	0
  3005  007030  0100               	movlb	0	; () banked
  3006  007032  6FB5               	movwf	(_size+1)& (0+255),b
  3007  007034  0E03               	movlw	3
  3008  007036  0100               	movlb	0	; () banked
  3009  007038  6FB4               	movwf	_size& (0+255),b
  3010                           
  3011                           ;newmain.c: 226: isRButtonPressed = 0;
  3012  00703A  0E00               	movlw	0
  3013  00703C  0100               	movlb	0	; () banked
  3014  00703E  6FB9               	movwf	_isRButtonPressed& (0+255),b
  3015                           
  3016                           ;newmain.c: 227: isLButtonPressed = 0;
  3017  007040  0E00               	movlw	0
  3018  007042  0100               	movlb	0	; () banked
  3019  007044  6FB7               	movwf	_isLButtonPressed& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022  007046  0012               	return	
  3023  007048                     __end_of_Init_Game:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           postinc0	equ	0xFEE
  3029                           wreg	equ	0xFE8
  3030                           indf2	equ	0xFDF
  3031                           fsr2h	equ	0xFDA
  3032                           fsr2l	equ	0xFD9
  3033                           status	equ	0xFD8
  3034                           
  3035 ;; *************** function _Draw *****************
  3036 ;; Defined at:
  3037 ;;		line 284 in file "newmain.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  it              2    8[COMRAM] int 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;		None               void
  3044 ;; Registers used:
  3045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        4 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    1
  3058 ;; This function calls:
  3059 ;;		_Out_B
  3060 ;;		_Out_D
  3061 ;;		___awmod
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text10
  3068  007804                     __ptext10:
  3069                           	opt stack 0
  3070  007804                     _Draw:
  3071                           	opt stack 29
  3072                           
  3073                           ;newmain.c: 287: Out_D( feedx, 1 );
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077  007804  0E01               	movlw	1
  3078  007806  6E01               	movwf	Out_D@o,c
  3079  007808  505E               	movf	_feedx,w,c
  3080  00780A  EC12  F039         	call	_Out_D
  3081                           
  3082                           ;newmain.c: 288: Out_B( feedy, 0 );
  3083  00780E  0E00               	movlw	0
  3084  007810  6E01               	movwf	Out_B@o,c
  3085  007812  505F               	movf	_feedy,w,c
  3086  007814  ECBE  F038         	call	_Out_B
  3087                           
  3088                           ;newmain.c: 290: _delay((unsigned long)((1)*(20000000/4000.0)));
  3089  007818  0E07               	movlw	7
  3090  00781A  6E07               	movwf	??_Draw& (0+255),c
  3091  00781C  0E7D               	movlw	125
  3092  00781E                     u2127:
  3093  00781E  2EE8               	decfsz	wreg,f,c
  3094  007820  D7FE               	goto	u2127
  3095  007822  2E07               	decfsz	??_Draw& (0+255),f,c
  3096  007824  D7FC               	goto	u2127
  3097  007826  F000               	nop	
  3098                           
  3099                           ;newmain.c: 292: Out_D( feedx, 0 );
  3100  007828  0E00               	movlw	0
  3101  00782A  6E01               	movwf	Out_D@o,c
  3102  00782C  505E               	movf	_feedx,w,c
  3103  00782E  EC12  F039         	call	_Out_D
  3104                           
  3105                           ;newmain.c: 293: Out_B( feedy, 1 );
  3106  007832  0E01               	movlw	1
  3107  007834  6E01               	movwf	Out_B@o,c
  3108  007836  505F               	movf	_feedy,w,c
  3109  007838  ECBE  F038         	call	_Out_B
  3110                           
  3111                           ;newmain.c: 296: int it = start;
  3112  00783C  C05C  F009         	movff	_start,Draw@it
  3113  007840  C05D  F00A         	movff	_start+1,Draw@it+1
  3114                           
  3115                           ;newmain.c: 297: Out_D( snake[it][0], 1 );
  3116  007844  0E01               	movlw	1
  3117  007846  6E01               	movwf	Out_D@o,c
  3118  007848  0E60               	movlw	low _snake
  3119  00784A  6E07               	movwf	??_Draw& (0+255),c
  3120  00784C  0E00               	movlw	high _snake
  3121  00784E  6E08               	movwf	(??_Draw+1)& (0+255),c
  3122  007850  90D8               	bcf	status,0,c
  3123  007852  3409               	rlcf	Draw@it,w,c
  3124  007854  6ED9               	movwf	fsr2l,c
  3125  007856  340A               	rlcf	Draw@it+1,w,c
  3126  007858  6EDA               	movwf	fsr2h,c
  3127  00785A  5007               	movf	??_Draw,w,c
  3128  00785C  26D9               	addwf	fsr2l,f,c
  3129  00785E  5008               	movf	??_Draw+1,w,c
  3130  007860  22DA               	addwfc	fsr2h,f,c
  3131  007862  50DF               	movf	indf2,w,c
  3132  007864  EC12  F039         	call	_Out_D
  3133                           
  3134                           ;newmain.c: 298: Out_B( snake[it][1], 0 );
  3135  007868  0E00               	movlw	0
  3136  00786A  6E01               	movwf	Out_B@o,c
  3137  00786C  C009  F007         	movff	Draw@it,??_Draw
  3138  007870  C00A  F008         	movff	Draw@it+1,??_Draw+1
  3139  007874  90D8               	bcf	status,0,c
  3140  007876  3607               	rlcf	??_Draw,f,c
  3141  007878  3608               	rlcf	??_Draw+1,f,c
  3142  00787A  0E01               	movlw	1
  3143  00787C  2607               	addwf	??_Draw,f,c
  3144  00787E  0E00               	movlw	0
  3145  007880  2208               	addwfc	??_Draw+1,f,c
  3146  007882  0100               	movlb	0	; () banked
  3147  007884  0E60               	movlw	low _snake
  3148  007886  2407               	addwf	??_Draw,w,c
  3149  007888  6ED9               	movwf	fsr2l,c
  3150  00788A  0100               	movlb	0	; () banked
  3151  00788C  0E00               	movlw	high _snake
  3152  00788E  2008               	addwfc	??_Draw+1,w,c
  3153  007890  6EDA               	movwf	fsr2h,c
  3154  007892  50DF               	movf	indf2,w,c
  3155  007894  ECBE  F038         	call	_Out_B
  3156                           
  3157                           ;newmain.c: 300: _delay((unsigned long)((1)*(20000000/4000.0)));
  3158  007898  0E07               	movlw	7
  3159  00789A  6E07               	movwf	??_Draw& (0+255),c
  3160  00789C  0E7D               	movlw	125
  3161  00789E                     u2137:
  3162  00789E  2EE8               	decfsz	wreg,f,c
  3163  0078A0  D7FE               	goto	u2137
  3164  0078A2  2E07               	decfsz	??_Draw& (0+255),f,c
  3165  0078A4  D7FC               	goto	u2137
  3166  0078A6  F000               	nop	
  3167                           
  3168                           ;newmain.c: 303: Out_D( snake[it][0], 0 );
  3169  0078A8  0E00               	movlw	0
  3170  0078AA  6E01               	movwf	Out_D@o,c
  3171  0078AC  0E60               	movlw	low _snake
  3172  0078AE  6E07               	movwf	??_Draw& (0+255),c
  3173  0078B0  0E00               	movlw	high _snake
  3174  0078B2  6E08               	movwf	(??_Draw+1)& (0+255),c
  3175  0078B4  90D8               	bcf	status,0,c
  3176  0078B6  3409               	rlcf	Draw@it,w,c
  3177  0078B8  6ED9               	movwf	fsr2l,c
  3178  0078BA  340A               	rlcf	Draw@it+1,w,c
  3179  0078BC  6EDA               	movwf	fsr2h,c
  3180  0078BE  5007               	movf	??_Draw,w,c
  3181  0078C0  26D9               	addwf	fsr2l,f,c
  3182  0078C2  5008               	movf	??_Draw+1,w,c
  3183  0078C4  22DA               	addwfc	fsr2h,f,c
  3184  0078C6  50DF               	movf	indf2,w,c
  3185  0078C8  EC12  F039         	call	_Out_D
  3186                           
  3187                           ;newmain.c: 304: Out_B( snake[it][1], 1 );
  3188  0078CC  0E01               	movlw	1
  3189  0078CE  6E01               	movwf	Out_B@o,c
  3190  0078D0  C009  F007         	movff	Draw@it,??_Draw
  3191  0078D4  C00A  F008         	movff	Draw@it+1,??_Draw+1
  3192  0078D8  90D8               	bcf	status,0,c
  3193  0078DA  3607               	rlcf	??_Draw,f,c
  3194  0078DC  3608               	rlcf	??_Draw+1,f,c
  3195  0078DE  0E01               	movlw	1
  3196  0078E0  2607               	addwf	??_Draw,f,c
  3197  0078E2  0E00               	movlw	0
  3198  0078E4  2208               	addwfc	??_Draw+1,f,c
  3199  0078E6  0100               	movlb	0	; () banked
  3200  0078E8  0E60               	movlw	low _snake
  3201  0078EA  2407               	addwf	??_Draw,w,c
  3202  0078EC  6ED9               	movwf	fsr2l,c
  3203  0078EE  0100               	movlb	0	; () banked
  3204  0078F0  0E00               	movlw	high _snake
  3205  0078F2  2008               	addwfc	??_Draw+1,w,c
  3206  0078F4  6EDA               	movwf	fsr2h,c
  3207  0078F6  50DF               	movf	indf2,w,c
  3208  0078F8  ECBE  F038         	call	_Out_B
  3209  0078FC                     l1741:
  3210                           
  3211                           ;newmain.c: 306: {
  3212                           ;newmain.c: 307: it = (it%40);
  3213  0078FC  C009  F001         	movff	Draw@it,___awmod@dividend
  3214  007900  C00A  F002         	movff	Draw@it+1,___awmod@dividend+1
  3215  007904  0E00               	movlw	0
  3216  007906  6E04               	movwf	___awmod@divisor+1,c
  3217  007908  0E28               	movlw	40
  3218  00790A  6E03               	movwf	___awmod@divisor,c
  3219  00790C  EC24  F038         	call	___awmod	;wreg free
  3220  007910  C001  F009         	movff	?___awmod,Draw@it
  3221  007914  C002  F00A         	movff	?___awmod+1,Draw@it+1
  3222                           
  3223                           ;newmain.c: 308: if( it == end )
  3224  007918  0100               	movlb	0	; () banked
  3225  00791A  51B3               	movf	(_end+1)& (0+255),w,b
  3226  00791C  180A               	xorwf	Draw@it+1,w,c
  3227  00791E  E103               	bnz	u1695
  3228  007920  0100               	movlb	0	; () banked
  3229  007922  51B2               	movf	_end& (0+255),w,b
  3230  007924  1809               	xorwf	Draw@it,w,c
  3231  007926                     u1695:
  3232  007926  B4D8               	btfsc	status,2,c
  3233  007928  D05F               	goto	l179
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;newmain.c: 311: Out_D( snake[it][0], 1 );
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;newmain.c: 309: break;
  3242  00792A  0E01               	movlw	1
  3243  00792C  6E01               	movwf	Out_D@o,c
  3244  00792E  0E60               	movlw	low _snake
  3245  007930  6E07               	movwf	??_Draw& (0+255),c
  3246  007932  0E00               	movlw	high _snake
  3247  007934  6E08               	movwf	(??_Draw+1)& (0+255),c
  3248  007936  90D8               	bcf	status,0,c
  3249  007938  3409               	rlcf	Draw@it,w,c
  3250  00793A  6ED9               	movwf	fsr2l,c
  3251  00793C  340A               	rlcf	Draw@it+1,w,c
  3252  00793E  6EDA               	movwf	fsr2h,c
  3253  007940  5007               	movf	??_Draw,w,c
  3254  007942  26D9               	addwf	fsr2l,f,c
  3255  007944  5008               	movf	??_Draw+1,w,c
  3256  007946  22DA               	addwfc	fsr2h,f,c
  3257  007948  50DF               	movf	indf2,w,c
  3258  00794A  EC12  F039         	call	_Out_D
  3259                           
  3260                           ;newmain.c: 312: Out_B( snake[it][1], 0 );
  3261  00794E  0E00               	movlw	0
  3262  007950  6E01               	movwf	Out_B@o,c
  3263  007952  C009  F007         	movff	Draw@it,??_Draw
  3264  007956  C00A  F008         	movff	Draw@it+1,??_Draw+1
  3265  00795A  90D8               	bcf	status,0,c
  3266  00795C  3607               	rlcf	??_Draw,f,c
  3267  00795E  3608               	rlcf	??_Draw+1,f,c
  3268  007960  0E01               	movlw	1
  3269  007962  2607               	addwf	??_Draw,f,c
  3270  007964  0E00               	movlw	0
  3271  007966  2208               	addwfc	??_Draw+1,f,c
  3272  007968  0100               	movlb	0	; () banked
  3273  00796A  0E60               	movlw	low _snake
  3274  00796C  2407               	addwf	??_Draw,w,c
  3275  00796E  6ED9               	movwf	fsr2l,c
  3276  007970  0100               	movlb	0	; () banked
  3277  007972  0E00               	movlw	high _snake
  3278  007974  2008               	addwfc	??_Draw+1,w,c
  3279  007976  6EDA               	movwf	fsr2h,c
  3280  007978  50DF               	movf	indf2,w,c
  3281  00797A  ECBE  F038         	call	_Out_B
  3282                           
  3283                           ;newmain.c: 314: _delay((unsigned long)((1)*(20000000/4000.0)));
  3284  00797E  0E07               	movlw	7
  3285  007980  6E07               	movwf	??_Draw& (0+255),c
  3286  007982  0E7D               	movlw	125
  3287  007984                     u2147:
  3288  007984  2EE8               	decfsz	wreg,f,c
  3289  007986  D7FE               	goto	u2147
  3290  007988  2E07               	decfsz	??_Draw& (0+255),f,c
  3291  00798A  D7FC               	goto	u2147
  3292  00798C  F000               	nop	
  3293                           
  3294                           ;newmain.c: 317: Out_D( snake[it][0], 0 );
  3295  00798E  0E00               	movlw	0
  3296  007990  6E01               	movwf	Out_D@o,c
  3297  007992  0E60               	movlw	low _snake
  3298  007994  6E07               	movwf	??_Draw& (0+255),c
  3299  007996  0E00               	movlw	high _snake
  3300  007998  6E08               	movwf	(??_Draw+1)& (0+255),c
  3301  00799A  90D8               	bcf	status,0,c
  3302  00799C  3409               	rlcf	Draw@it,w,c
  3303  00799E  6ED9               	movwf	fsr2l,c
  3304  0079A0  340A               	rlcf	Draw@it+1,w,c
  3305  0079A2  6EDA               	movwf	fsr2h,c
  3306  0079A4  5007               	movf	??_Draw,w,c
  3307  0079A6  26D9               	addwf	fsr2l,f,c
  3308  0079A8  5008               	movf	??_Draw+1,w,c
  3309  0079AA  22DA               	addwfc	fsr2h,f,c
  3310  0079AC  50DF               	movf	indf2,w,c
  3311  0079AE  EC12  F039         	call	_Out_D
  3312                           
  3313                           ;newmain.c: 318: Out_B( snake[it][1], 1 );
  3314  0079B2  0E01               	movlw	1
  3315  0079B4  6E01               	movwf	Out_B@o,c
  3316  0079B6  C009  F007         	movff	Draw@it,??_Draw
  3317  0079BA  C00A  F008         	movff	Draw@it+1,??_Draw+1
  3318  0079BE  90D8               	bcf	status,0,c
  3319  0079C0  3607               	rlcf	??_Draw,f,c
  3320  0079C2  3608               	rlcf	??_Draw+1,f,c
  3321  0079C4  0E01               	movlw	1
  3322  0079C6  2607               	addwf	??_Draw,f,c
  3323  0079C8  0E00               	movlw	0
  3324  0079CA  2208               	addwfc	??_Draw+1,f,c
  3325  0079CC  0100               	movlb	0	; () banked
  3326  0079CE  0E60               	movlw	low _snake
  3327  0079D0  2407               	addwf	??_Draw,w,c
  3328  0079D2  6ED9               	movwf	fsr2l,c
  3329  0079D4  0100               	movlb	0	; () banked
  3330  0079D6  0E00               	movlw	high _snake
  3331  0079D8  2008               	addwfc	??_Draw+1,w,c
  3332  0079DA  6EDA               	movwf	fsr2h,c
  3333  0079DC  50DF               	movf	indf2,w,c
  3334  0079DE  ECBE  F038         	call	_Out_B
  3335  0079E2  4A09               	infsnz	Draw@it,f,c
  3336  0079E4  2A0A               	incf	Draw@it+1,f,c
  3337  0079E6  D78A               	goto	l1741
  3338  0079E8                     l179:
  3339  0079E8  0012               	return	
  3340  0079EA                     __end_of_Draw:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           indf2	equ	0xFDF
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _Out_D *****************
  3353 ;; Defined at:
  3354 ;;		line 341 in file "newmain.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  pin             1    wreg     unsigned char 
  3357 ;;  o               1    0[COMRAM] unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  pin             1    1[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;		None               void
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3369 ;;      Params:         1       0       0       0       0       0       0       0       0
  3370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3372 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_Draw
  3379 ;;		_DrawMatris
  3380 ;;		_init
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text11
  3385  007224                     __ptext11:
  3386                           	opt stack 0
  3387  007224                     _Out_D:
  3388                           	opt stack 28
  3389                           
  3390                           ;incstack = 0
  3391                           ;Out_D@pin stored from wreg
  3392  007224  6E02               	movwf	Out_D@pin,c
  3393                           
  3394                           ;newmain.c: 343: switch( pin )
  3395  007226  D038               	goto	l1421
  3396  007228                     l194:
  3397  007228  A001               	btfss	Out_D@o,0,c
  3398  00722A  D001               	bra	u1065
  3399  00722C  808C               	bsf	3980,0,c	;volatile
  3400  00722E                     u1065:
  3401  00722E  B001               	btfsc	Out_D@o,0,c
  3402  007230  D001               	bra	u1066
  3403  007232  908C               	bcf	3980,0,c	;volatile
  3404  007234                     u1066:
  3405  007234  D04A               	goto	l203
  3406  007236                     l196:
  3407  007236  A001               	btfss	Out_D@o,0,c
  3408  007238  D001               	bra	u1075
  3409  00723A  828C               	bsf	3980,1,c	;volatile
  3410  00723C                     u1075:
  3411  00723C  B001               	btfsc	Out_D@o,0,c
  3412  00723E  D001               	bra	u1076
  3413  007240  928C               	bcf	3980,1,c	;volatile
  3414  007242                     u1076:
  3415  007242  D043               	goto	l203
  3416  007244                     l197:
  3417  007244  A001               	btfss	Out_D@o,0,c
  3418  007246  D001               	bra	u1085
  3419  007248  848C               	bsf	3980,2,c	;volatile
  3420  00724A                     u1085:
  3421  00724A  B001               	btfsc	Out_D@o,0,c
  3422  00724C  D001               	bra	u1086
  3423  00724E  948C               	bcf	3980,2,c	;volatile
  3424  007250                     u1086:
  3425  007250  D03C               	goto	l203
  3426  007252                     l198:
  3427  007252  A001               	btfss	Out_D@o,0,c
  3428  007254  D001               	bra	u1095
  3429  007256  868C               	bsf	3980,3,c	;volatile
  3430  007258                     u1095:
  3431  007258  B001               	btfsc	Out_D@o,0,c
  3432  00725A  D001               	bra	u1096
  3433  00725C  968C               	bcf	3980,3,c	;volatile
  3434  00725E                     u1096:
  3435  00725E  D035               	goto	l203
  3436  007260                     l199:
  3437  007260  A001               	btfss	Out_D@o,0,c
  3438  007262  D001               	bra	u1105
  3439  007264  888C               	bsf	3980,4,c	;volatile
  3440  007266                     u1105:
  3441  007266  B001               	btfsc	Out_D@o,0,c
  3442  007268  D001               	bra	u1106
  3443  00726A  988C               	bcf	3980,4,c	;volatile
  3444  00726C                     u1106:
  3445  00726C  D02E               	goto	l203
  3446  00726E                     l200:
  3447  00726E  A001               	btfss	Out_D@o,0,c
  3448  007270  D001               	bra	u1115
  3449  007272  8A8C               	bsf	3980,5,c	;volatile
  3450  007274                     u1115:
  3451  007274  B001               	btfsc	Out_D@o,0,c
  3452  007276  D001               	bra	u1116
  3453  007278  9A8C               	bcf	3980,5,c	;volatile
  3454  00727A                     u1116:
  3455  00727A  D027               	goto	l203
  3456  00727C                     l201:
  3457  00727C  A001               	btfss	Out_D@o,0,c
  3458  00727E  D001               	bra	u1125
  3459  007280  8C8C               	bsf	3980,6,c	;volatile
  3460  007282                     u1125:
  3461  007282  B001               	btfsc	Out_D@o,0,c
  3462  007284  D001               	bra	u1126
  3463  007286  9C8C               	bcf	3980,6,c	;volatile
  3464  007288                     u1126:
  3465  007288  D020               	goto	l203
  3466  00728A                     l202:
  3467  00728A  A001               	btfss	Out_D@o,0,c
  3468  00728C  D001               	bra	u1135
  3469  00728E  8E8C               	bsf	3980,7,c	;volatile
  3470  007290                     u1135:
  3471  007290  B001               	btfsc	Out_D@o,0,c
  3472  007292  D001               	bra	u1136
  3473  007294  9E8C               	bcf	3980,7,c	;volatile
  3474  007296                     u1136:
  3475  007296  D019               	goto	l203
  3476  007298                     l1421:
  3477  007298  5002               	movf	Out_D@pin,w,c
  3478                           
  3479                           ; Switch size 1, requested type "space"
  3480                           ; Number of cases is 8, Range of values is 0 to 7
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte           25    13 (average)
  3484                           ;	Chosen strategy is simple_byte
  3485  00729A  0A00               	xorlw	0	; case 0
  3486  00729C  B4D8               	btfsc	status,2,c
  3487  00729E  D7C4               	goto	l194
  3488  0072A0  0A01               	xorlw	1	; case 1
  3489  0072A2  B4D8               	btfsc	status,2,c
  3490  0072A4  D7C8               	goto	l196
  3491  0072A6  0A03               	xorlw	3	; case 2
  3492  0072A8  B4D8               	btfsc	status,2,c
  3493  0072AA  D7CC               	goto	l197
  3494  0072AC  0A01               	xorlw	1	; case 3
  3495  0072AE  B4D8               	btfsc	status,2,c
  3496  0072B0  D7D0               	goto	l198
  3497  0072B2  0A07               	xorlw	7	; case 4
  3498  0072B4  B4D8               	btfsc	status,2,c
  3499  0072B6  D7D4               	goto	l199
  3500  0072B8  0A01               	xorlw	1	; case 5
  3501  0072BA  B4D8               	btfsc	status,2,c
  3502  0072BC  D7D8               	goto	l200
  3503  0072BE  0A03               	xorlw	3	; case 6
  3504  0072C0  B4D8               	btfsc	status,2,c
  3505  0072C2  D7DC               	goto	l201
  3506  0072C4  0A01               	xorlw	1	; case 7
  3507  0072C6  B4D8               	btfsc	status,2,c
  3508  0072C8  D7E0               	goto	l202
  3509  0072CA                     l203:
  3510  0072CA  0012               	return	
  3511  0072CC                     __end_of_Out_D:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           indf2	equ	0xFDF
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _Out_B *****************
  3524 ;; Defined at:
  3525 ;;		line 356 in file "newmain.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  pin             1    wreg     unsigned char 
  3528 ;;  o               1    0[COMRAM] unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  pin             1    1[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         1       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_Draw
  3550 ;;		_DrawMatris
  3551 ;;		_init
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text12
  3556  00717C                     __ptext12:
  3557                           	opt stack 0
  3558  00717C                     _Out_B:
  3559                           	opt stack 28
  3560                           
  3561                           ;incstack = 0
  3562                           ;Out_B@pin stored from wreg
  3563  00717C  6E02               	movwf	Out_B@pin,c
  3564                           
  3565                           ;newmain.c: 358: switch( pin )
  3566  00717E  D038               	goto	l1427
  3567  007180                     l207:
  3568  007180  A001               	btfss	Out_B@o,0,c
  3569  007182  D001               	bra	u1145
  3570  007184  808A               	bsf	3978,0,c	;volatile
  3571  007186                     u1145:
  3572  007186  B001               	btfsc	Out_B@o,0,c
  3573  007188  D001               	bra	u1146
  3574  00718A  908A               	bcf	3978,0,c	;volatile
  3575  00718C                     u1146:
  3576  00718C  D04A               	goto	l216
  3577  00718E                     l209:
  3578  00718E  A001               	btfss	Out_B@o,0,c
  3579  007190  D001               	bra	u1155
  3580  007192  828A               	bsf	3978,1,c	;volatile
  3581  007194                     u1155:
  3582  007194  B001               	btfsc	Out_B@o,0,c
  3583  007196  D001               	bra	u1156
  3584  007198  928A               	bcf	3978,1,c	;volatile
  3585  00719A                     u1156:
  3586  00719A  D043               	goto	l216
  3587  00719C                     l210:
  3588  00719C  A001               	btfss	Out_B@o,0,c
  3589  00719E  D001               	bra	u1165
  3590  0071A0  848A               	bsf	3978,2,c	;volatile
  3591  0071A2                     u1165:
  3592  0071A2  B001               	btfsc	Out_B@o,0,c
  3593  0071A4  D001               	bra	u1166
  3594  0071A6  948A               	bcf	3978,2,c	;volatile
  3595  0071A8                     u1166:
  3596  0071A8  D03C               	goto	l216
  3597  0071AA                     l211:
  3598  0071AA  A001               	btfss	Out_B@o,0,c
  3599  0071AC  D001               	bra	u1175
  3600  0071AE  868A               	bsf	3978,3,c	;volatile
  3601  0071B0                     u1175:
  3602  0071B0  B001               	btfsc	Out_B@o,0,c
  3603  0071B2  D001               	bra	u1176
  3604  0071B4  968A               	bcf	3978,3,c	;volatile
  3605  0071B6                     u1176:
  3606  0071B6  D035               	goto	l216
  3607  0071B8                     l212:
  3608  0071B8  A001               	btfss	Out_B@o,0,c
  3609  0071BA  D001               	bra	u1185
  3610  0071BC  888A               	bsf	3978,4,c	;volatile
  3611  0071BE                     u1185:
  3612  0071BE  B001               	btfsc	Out_B@o,0,c
  3613  0071C0  D001               	bra	u1186
  3614  0071C2  988A               	bcf	3978,4,c	;volatile
  3615  0071C4                     u1186:
  3616  0071C4  D02E               	goto	l216
  3617  0071C6                     l213:
  3618  0071C6  A001               	btfss	Out_B@o,0,c
  3619  0071C8  D001               	bra	u1195
  3620  0071CA  8A8A               	bsf	3978,5,c	;volatile
  3621  0071CC                     u1195:
  3622  0071CC  B001               	btfsc	Out_B@o,0,c
  3623  0071CE  D001               	bra	u1196
  3624  0071D0  9A8A               	bcf	3978,5,c	;volatile
  3625  0071D2                     u1196:
  3626  0071D2  D027               	goto	l216
  3627  0071D4                     l214:
  3628  0071D4  A001               	btfss	Out_B@o,0,c
  3629  0071D6  D001               	bra	u1205
  3630  0071D8  8C8A               	bsf	3978,6,c	;volatile
  3631  0071DA                     u1205:
  3632  0071DA  B001               	btfsc	Out_B@o,0,c
  3633  0071DC  D001               	bra	u1206
  3634  0071DE  9C8A               	bcf	3978,6,c	;volatile
  3635  0071E0                     u1206:
  3636  0071E0  D020               	goto	l216
  3637  0071E2                     l215:
  3638  0071E2  A001               	btfss	Out_B@o,0,c
  3639  0071E4  D001               	bra	u1215
  3640  0071E6  8E8A               	bsf	3978,7,c	;volatile
  3641  0071E8                     u1215:
  3642  0071E8  B001               	btfsc	Out_B@o,0,c
  3643  0071EA  D001               	bra	u1216
  3644  0071EC  9E8A               	bcf	3978,7,c	;volatile
  3645  0071EE                     u1216:
  3646  0071EE  D019               	goto	l216
  3647  0071F0                     l1427:
  3648  0071F0  5002               	movf	Out_B@pin,w,c
  3649                           
  3650                           ; Switch size 1, requested type "space"
  3651                           ; Number of cases is 8, Range of values is 0 to 7
  3652                           ; switch strategies available:
  3653                           ; Name         Instructions Cycles
  3654                           ; simple_byte           25    13 (average)
  3655                           ;	Chosen strategy is simple_byte
  3656  0071F2  0A00               	xorlw	0	; case 0
  3657  0071F4  B4D8               	btfsc	status,2,c
  3658  0071F6  D7C4               	goto	l207
  3659  0071F8  0A01               	xorlw	1	; case 1
  3660  0071FA  B4D8               	btfsc	status,2,c
  3661  0071FC  D7C8               	goto	l209
  3662  0071FE  0A03               	xorlw	3	; case 2
  3663  007200  B4D8               	btfsc	status,2,c
  3664  007202  D7CC               	goto	l210
  3665  007204  0A01               	xorlw	1	; case 3
  3666  007206  B4D8               	btfsc	status,2,c
  3667  007208  D7D0               	goto	l211
  3668  00720A  0A07               	xorlw	7	; case 4
  3669  00720C  B4D8               	btfsc	status,2,c
  3670  00720E  D7D4               	goto	l212
  3671  007210  0A01               	xorlw	1	; case 5
  3672  007212  B4D8               	btfsc	status,2,c
  3673  007214  D7D8               	goto	l213
  3674  007216  0A03               	xorlw	3	; case 6
  3675  007218  B4D8               	btfsc	status,2,c
  3676  00721A  D7DC               	goto	l214
  3677  00721C  0A01               	xorlw	1	; case 7
  3678  00721E  B4D8               	btfsc	status,2,c
  3679  007220  D7E0               	goto	l215
  3680  007222                     l216:
  3681  007222  0012               	return	
  3682  007224                     __end_of_Out_B:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           prodh	equ	0xFF4
  3686                           prodl	equ	0xFF3
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           indf2	equ	0xFDF
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _ControllForCrush *****************
  3695 ;; Defined at:
  3696 ;;		line 233 in file "newmain.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  it              2   10[COMRAM] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        6 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    1
  3717 ;; This function calls:
  3718 ;;		___awmod
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text13
  3725  00738A                     __ptext13:
  3726                           	opt stack 0
  3727  00738A                     _ControllForCrush:
  3728                           	opt stack 29
  3729                           
  3730                           ;newmain.c: 235: int it = start+1;
  3731                           
  3732                           ;incstack = 0
  3733  00738A  0E01               	movlw	1
  3734  00738C  245C               	addwf	_start,w,c
  3735  00738E  6E0B               	movwf	ControllForCrush@it,c
  3736  007390  0E00               	movlw	0
  3737  007392  205D               	addwfc	_start+1,w,c
  3738  007394  6E0C               	movwf	ControllForCrush@it+1,c
  3739  007396                     l1799:
  3740                           
  3741                           ;newmain.c: 237: {
  3742                           ;newmain.c: 238: it = (it%40);
  3743  007396  C00B  F001         	movff	ControllForCrush@it,___awmod@dividend
  3744  00739A  C00C  F002         	movff	ControllForCrush@it+1,___awmod@dividend+1
  3745  00739E  0E00               	movlw	0
  3746  0073A0  6E04               	movwf	___awmod@divisor+1,c
  3747  0073A2  0E28               	movlw	40
  3748  0073A4  6E03               	movwf	___awmod@divisor,c
  3749  0073A6  EC24  F038         	call	___awmod	;wreg free
  3750  0073AA  C001  F00B         	movff	?___awmod,ControllForCrush@it
  3751  0073AE  C002  F00C         	movff	?___awmod+1,ControllForCrush@it+1
  3752                           
  3753                           ;newmain.c: 239: if( it == end )
  3754  0073B2  0100               	movlb	0	; () banked
  3755  0073B4  51B3               	movf	(_end+1)& (0+255),w,b
  3756  0073B6  180C               	xorwf	ControllForCrush@it+1,w,c
  3757  0073B8  E103               	bnz	u1755
  3758  0073BA  0100               	movlb	0	; () banked
  3759  0073BC  51B2               	movf	_end& (0+255),w,b
  3760  0073BE  180B               	xorwf	ControllForCrush@it,w,c
  3761  0073C0                     u1755:
  3762  0073C0  B4D8               	btfsc	status,2,c
  3763  0073C2  D04B               	goto	l1815
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;newmain.c: 242: if( snake[it][0] == snake[start][0] && snake[it][1] == snake[start][1] 
      +                          )
  3767                           
  3768                           ; BSR set to: 0
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;newmain.c: 240: break;
  3772  0073C4  0E60               	movlw	low _snake
  3773  0073C6  6E07               	movwf	??_ControllForCrush& (0+255),c
  3774  0073C8  0E00               	movlw	high _snake
  3775  0073CA  6E08               	movwf	(??_ControllForCrush+1)& (0+255),c
  3776  0073CC  90D8               	bcf	status,0,c
  3777  0073CE  340B               	rlcf	ControllForCrush@it,w,c
  3778  0073D0  6ED9               	movwf	fsr2l,c
  3779  0073D2  340C               	rlcf	ControllForCrush@it+1,w,c
  3780  0073D4  6EDA               	movwf	fsr2h,c
  3781  0073D6  5007               	movf	??_ControllForCrush,w,c
  3782  0073D8  26D9               	addwf	fsr2l,f,c
  3783  0073DA  5008               	movf	??_ControllForCrush+1,w,c
  3784  0073DC  22DA               	addwfc	fsr2h,f,c
  3785  0073DE  0E60               	movlw	low _snake
  3786  0073E0  6E09               	movwf	(??_ControllForCrush+2)& (0+255),c
  3787  0073E2  0E00               	movlw	high _snake
  3788  0073E4  6E0A               	movwf	(??_ControllForCrush+3)& (0+255),c
  3789  0073E6  90D8               	bcf	status,0,c
  3790  0073E8  345C               	rlcf	_start,w,c
  3791  0073EA  6EE1               	movwf	fsr1l,c
  3792  0073EC  345D               	rlcf	_start+1,w,c
  3793  0073EE  6EE2               	movwf	fsr1h,c
  3794  0073F0  5009               	movf	??_ControllForCrush+2,w,c
  3795  0073F2  26E1               	addwf	fsr1l,f,c
  3796  0073F4  500A               	movf	??_ControllForCrush+3,w,c
  3797  0073F6  22E2               	addwfc	fsr1h,f,c
  3798  0073F8  50E7               	movf	indf1,w,c
  3799  0073FA  62DF               	cpfseq	indf2,c
  3800  0073FC  D02B               	goto	l1813
  3801                           
  3802                           ; BSR set to: 0
  3803  0073FE  C00B  F007         	movff	ControllForCrush@it,??_ControllForCrush
  3804  007402  C00C  F008         	movff	ControllForCrush@it+1,??_ControllForCrush+1
  3805  007406  90D8               	bcf	status,0,c
  3806  007408  3607               	rlcf	??_ControllForCrush,f,c
  3807  00740A  3608               	rlcf	??_ControllForCrush+1,f,c
  3808  00740C  0E01               	movlw	1
  3809  00740E  2607               	addwf	??_ControllForCrush,f,c
  3810  007410  0E00               	movlw	0
  3811  007412  2208               	addwfc	??_ControllForCrush+1,f,c
  3812  007414  0100               	movlb	0	; () banked
  3813  007416  0E60               	movlw	low _snake
  3814  007418  2407               	addwf	??_ControllForCrush,w,c
  3815  00741A  6ED9               	movwf	fsr2l,c
  3816  00741C  0100               	movlb	0	; () banked
  3817  00741E  0E00               	movlw	high _snake
  3818  007420  2008               	addwfc	??_ControllForCrush+1,w,c
  3819  007422  6EDA               	movwf	fsr2h,c
  3820  007424  C05C  F009         	movff	_start,??_ControllForCrush+2
  3821  007428  C05D  F00A         	movff	_start+1,??_ControllForCrush+3
  3822  00742C  90D8               	bcf	status,0,c
  3823  00742E  3609               	rlcf	??_ControllForCrush+2,f,c
  3824  007430  360A               	rlcf	??_ControllForCrush+3,f,c
  3825  007432  0E01               	movlw	1
  3826  007434  2609               	addwf	??_ControllForCrush+2,f,c
  3827  007436  0E00               	movlw	0
  3828  007438  220A               	addwfc	??_ControllForCrush+3,f,c
  3829  00743A  0100               	movlb	0	; () banked
  3830  00743C  0E60               	movlw	low _snake
  3831  00743E  2409               	addwf	??_ControllForCrush+2,w,c
  3832  007440  6EE1               	movwf	fsr1l,c
  3833  007442  0100               	movlb	0	; () banked
  3834  007444  0E00               	movlw	high _snake
  3835  007446  200A               	addwfc	??_ControllForCrush+3,w,c
  3836  007448  6EE2               	movwf	fsr1h,c
  3837  00744A  50E7               	movf	indf1,w,c
  3838  00744C  62DF               	cpfseq	indf2,c
  3839  00744E  D002               	goto	l1813
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;newmain.c: 243: return 1;
  3843  007450  0E01               	movlw	1
  3844  007452  D004               	goto	l152
  3845  007454                     l1813:
  3846                           
  3847                           ; BSR set to: 0
  3848  007454  4A0B               	infsnz	ControllForCrush@it,f,c
  3849  007456  2A0C               	incf	ControllForCrush@it+1,f,c
  3850  007458  D79E               	goto	l1799
  3851  00745A                     l1815:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;newmain.c: 244: }
  3855                           ;newmain.c: 245: return 0;
  3856  00745A  0E00               	movlw	0
  3857  00745C                     l152:
  3858                           
  3859                           ; BSR set to: 0
  3860  00745C  0012               	return	
  3861  00745E                     __end_of_ControllForCrush:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           indf1	equ	0xFE7
  3869                           fsr1h	equ	0xFE2
  3870                           fsr1l	equ	0xFE1
  3871                           indf2	equ	0xFDF
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function ___awmod *****************
  3877 ;; Defined at:
  3878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  dividend        2    0[COMRAM] int 
  3881 ;;  divisor         2    2[COMRAM] int 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  sign            1    5[COMRAM] unsigned char 
  3884 ;;  counter         1    4[COMRAM] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2    0[COMRAM] int 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, prodl
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         4       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        6 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;;		_ControllForCrush
  3905 ;;		_PlaceFeed
  3906 ;;		_Draw
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text14
  3911  007048                     __ptext14:
  3912                           	opt stack 0
  3913  007048                     ___awmod:
  3914                           	opt stack 30
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;incstack = 0
  3918  007048  0E00               	movlw	0
  3919  00704A  6E06               	movwf	___awmod@sign,c
  3920  00704C  5002               	movf	___awmod@dividend+1,w,c
  3921  00704E  0A80               	xorlw	128
  3922  007050  6EF3               	movwf	prodl,c
  3923  007052  0E80               	movlw	128
  3924  007054  5CF3               	subwf	prodl,w,c
  3925  007056  0E00               	movlw	0
  3926  007058  B4D8               	btfsc	status,2,c
  3927  00705A  5C01               	subwf	___awmod@dividend,w,c
  3928  00705C  B0D8               	btfsc	status,0,c
  3929  00705E  D006               	goto	l1535
  3930  007060  6C01               	negf	___awmod@dividend,c
  3931  007062  1E02               	comf	___awmod@dividend+1,f,c
  3932  007064  B0D8               	btfsc	status,0,c
  3933  007066  2A02               	incf	___awmod@dividend+1,f,c
  3934  007068  0E01               	movlw	1
  3935  00706A  6E06               	movwf	___awmod@sign,c
  3936  00706C                     l1535:
  3937  00706C  5004               	movf	___awmod@divisor+1,w,c
  3938  00706E  0A80               	xorlw	128
  3939  007070  6EF3               	movwf	prodl,c
  3940  007072  0E80               	movlw	128
  3941  007074  5CF3               	subwf	prodl,w,c
  3942  007076  0E00               	movlw	0
  3943  007078  B4D8               	btfsc	status,2,c
  3944  00707A  5C03               	subwf	___awmod@divisor,w,c
  3945  00707C  B0D8               	btfsc	status,0,c
  3946  00707E  D004               	goto	l1539
  3947  007080  6C03               	negf	___awmod@divisor,c
  3948  007082  1E04               	comf	___awmod@divisor+1,f,c
  3949  007084  B0D8               	btfsc	status,0,c
  3950  007086  2A04               	incf	___awmod@divisor+1,f,c
  3951  007088                     l1539:
  3952  007088  5004               	movf	___awmod@divisor+1,w,c
  3953  00708A  1003               	iorwf	___awmod@divisor,w,c
  3954  00708C  B4D8               	btfsc	status,2,c
  3955  00708E  D018               	goto	l1555
  3956  007090  0E01               	movlw	1
  3957  007092  6E05               	movwf	___awmod@counter,c
  3958  007094  D004               	goto	l1545
  3959  007096                     l1543:
  3960  007096  90D8               	bcf	status,0,c
  3961  007098  3603               	rlcf	___awmod@divisor,f,c
  3962  00709A  3604               	rlcf	___awmod@divisor+1,f,c
  3963  00709C  2A05               	incf	___awmod@counter,f,c
  3964  00709E                     l1545:
  3965  00709E  AE04               	btfss	___awmod@divisor+1,7,c
  3966  0070A0  D7FA               	goto	l1543
  3967  0070A2                     l1547:
  3968  0070A2  5003               	movf	___awmod@divisor,w,c
  3969  0070A4  5C01               	subwf	___awmod@dividend,w,c
  3970  0070A6  5004               	movf	___awmod@divisor+1,w,c
  3971  0070A8  5802               	subwfb	___awmod@dividend+1,w,c
  3972  0070AA  A0D8               	btfss	status,0,c
  3973  0070AC  D004               	goto	l1551
  3974  0070AE  5003               	movf	___awmod@divisor,w,c
  3975  0070B0  5E01               	subwf	___awmod@dividend,f,c
  3976  0070B2  5004               	movf	___awmod@divisor+1,w,c
  3977  0070B4  5A02               	subwfb	___awmod@dividend+1,f,c
  3978  0070B6                     l1551:
  3979  0070B6  90D8               	bcf	status,0,c
  3980  0070B8  3204               	rrcf	___awmod@divisor+1,f,c
  3981  0070BA  3203               	rrcf	___awmod@divisor,f,c
  3982  0070BC  2E05               	decfsz	___awmod@counter,f,c
  3983  0070BE  D7F1               	goto	l1547
  3984  0070C0                     l1555:
  3985  0070C0  5006               	movf	___awmod@sign,w,c
  3986  0070C2  B4D8               	btfsc	status,2,c
  3987  0070C4  D004               	goto	l1559
  3988  0070C6  6C01               	negf	___awmod@dividend,c
  3989  0070C8  1E02               	comf	___awmod@dividend+1,f,c
  3990  0070CA  B0D8               	btfsc	status,0,c
  3991  0070CC  2A02               	incf	___awmod@dividend+1,f,c
  3992  0070CE                     l1559:
  3993  0070CE  C001  F001         	movff	___awmod@dividend,?___awmod
  3994  0070D2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3995  0070D6  0012               	return	
  3996  0070D8                     __end_of___awmod:
  3997                           	opt stack 0
  3998  0000                     tblptru	equ	0xFF8
  3999                           prodh	equ	0xFF4
  4000                           prodl	equ	0xFF3
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           indf1	equ	0xFE7
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           indf2	equ	0xFDF
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           tblptru	equ	0xFF8
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           indf1	equ	0xFE7
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023                           	psect	rparam
  4024  0000                     tblptru	equ	0xFF8
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           indf1	equ	0xFE7
  4030                           fsr1h	equ	0xFE2
  4031                           fsr1l	equ	0xFE1
  4032                           indf2	equ	0xFDF
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160      7      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DrawMatris@matris	PTR unsigned char [8] size(2) Largest target is 64
		 -> p321@mm(COMRAM[64]), 


Critical Paths under _main in COMRAM

    _main->_p321
    _p321->_DrawMatris
    _DrawMatris->_Out_B
    _DrawMatris->_Out_D
    _init->_Delay1Second
    ___wmul->___awmod
    _PlaceFeed->___awdiv
    _Draw->___awmod
    _ControllForCrush->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14     9      5   14225
                                             84 COMRAM     7     2      5
                                              0 BANK0      7     7      0
                   _ControllForCrush
                               _Draw
                          _Init_Game
                               _Move
                          _PlaceFeed
                            ___awdiv
                            ___awmod
                             ___wmul
                               _init
                               _p321
 ---------------------------------------------------------------------------------
 (1) _p321                                                72    72      0    3992
                                             12 COMRAM    72    72      0
                         _DrawMatris
 ---------------------------------------------------------------------------------
 (2) _DrawMatris                                          10     8      2    2610
                                              2 COMRAM    10     8      2
                              _Out_B
                              _Out_D
 ---------------------------------------------------------------------------------
 (1) _init                                                 8     8      0    2276
                                              3 COMRAM     8     8      0
                       _Delay1Second
                              _Out_B
                              _Out_D
 ---------------------------------------------------------------------------------
 (2) _Delay1Second                                         3     3      0      47
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              6 COMRAM     6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _PlaceFeed                                            6     4      2    1579
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     512
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Move                                                 7     7      0     142
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _Init_Game                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Draw                                                 4     4      0    3141
                                              6 COMRAM     4     4      0
                              _Out_B
                              _Out_D
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _Out_D                                                2     1      1    1046
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Out_B                                                2     1      1    1046
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ControllForCrush                                     6     6      0     917
                                              6 COMRAM     6     6      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     826
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControllForCrush
     ___awmod
   _Draw
     _Out_B
     _Out_D
     ___awmod
   _Init_Game
   _Move
   _PlaceFeed
     ___awdiv
     ___awmod
   ___awdiv
   ___awmod
   ___wmul
     ___awmod (ARG)
   _init
     _Delay1Second
     _Out_B
     _Out_D
   _p321
     _DrawMatris
       _Out_B
       _Out_D

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      62       5       61.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      20        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Dec 14 21:44:31 2014

                       l90 7CE6                         l87 7CA0                         l88 7CDA  
                       l89 7CF6               ___awdiv@sign 0006          ?_ControllForCrush 0001  
      ___wmul@multiplicand 0009                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
       ??_ControllForCrush 0007                        l110 7E2E                        l200 726E  
                      l201 727C                        l210 719C                        l202 728A  
                      l211 71AA                        l203 72CA                        l212 71B8  
                      l213 71C6                        l214 71D4                        l215 71E2  
                      l207 7180                        l231 7AB2                        l135 7FC4  
                      l152 745C                        l216 7222                        l209 718E  
                      l243 7C7E                        l237 7B9E                        l190 7570  
                      l249 6FEE                        l194 7228                        l179 79E8  
                      l196 7236                        l197 7244                        l198 7252  
                      l199 7260               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
             __CFG_BOR$OFF 000000                        _dir 00B6                        _end 00B2  
             ___awmod@sign 0006          _isLButtonPressing 00B8                        wreg 000FE8  
             __CFG_WDT$OFF 000000                       l1421 7298                       l1503 7132  
                     l1505 713A                       l1427 71F0                       l1523 7172  
                     l1515 715A                       l1507 713E                       l1451 74EC  
                     l1611 7A60                       l1701 72F8                       l1551 70B6  
                     l1543 7096                       l1535 706C                       l1519 7164  
                     l1463 755A                       l1447 74E6                       l1607 7A5A  
                     l1545 709E                       l1641 7B42                       l1547 70A2  
                     l1555 70C0                       l1539 7088                       l1491 70FC  
                     l1715 737A                       l1467 7560                       l1813 7454  
                     l1741 78FC                       l1717 7380                       l1645 7B48  
                     l1559 70CE                       l1815 745A                       l1583 7758  
                     l1497 711C                       l1921 7E72                       l1905 7E36  
                     l1771 75F8                       l1763 75D8                       l1587 775E  
                     l1675 7C2E                       l1923 7E76                       l1765 75E0  
                     l1941 7EFC                       l1917 7E6A                       l1909 7E3E  
                     l1853 7D50                       l1791 7654                       l1775 7608  
                     l1759 75C8                       l1679 7C34                       l1935 7EAA  
                     l1919 7E6E                       l1927 7E7E                       l1863 7D9A  
                     l1855 7D64                       l1847 7D04                       l1777 7610  
                     l1785 7628                       l1961 7F8C                       l1945 7F12  
                     l1953 7F68                       l1929 7E9A                       l1873 7DBE  
                     l1787 7644                       l1971 7FB4                       l1947 7F1C  
                     l1955 7F7C                       l1891 7DF6                       l1867 7DA2  
                     l1981 7FD4                       l1957 7F84                       l1893 7DFA  
                     l1799 7396                       l1887 7DEE                       l1879 7DCE  
                     l1977 7FCC                       l1889 7DF2                       l1897 7E02  
                     l1899 7E1E                       u1105 7266                       u1106 726C  
                     u1115 7274                       u1116 727A                       u1205 71DA  
                     u1125 7282                       u1206 71E0                       u1126 7288  
                     u1215 71E8                       u1135 7290                       u1216 71EE  
                     u1136 7296                       u1145 7186                       u1065 722E  
                     u1146 718C                       u1066 7234                       u1155 7194  
                     u1075 723C                       u2107 74F2                       u1156 719A  
                     u1076 7242                       u1165 71A2                       u1085 724A  
                     u2117 6FDE                       u1166 71A8                       u1086 7250  
                     u1175 71B0                       u1095 7258                       u2127 781E  
                     u1176 71B6                       u1096 725E                       u1185 71BE  
                     u2137 789E                       u1186 71C4                       u1195 71CC  
                     u2147 7984                       u1196 71D2                       u1665 7322  
                     u1755 73C0                       u1695 7926                main@minLoop 00BD  
                     _p321 79EA                       _Draw 7804                       _Move 7572  
                     _main 7CA0                       _init 76A4                       _size 00B4  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000              __CFG_PLLDIV$5 000000                      ?_p321 0001  
                    ?_Draw 0001                      ?_Move 0001                 PlaceFeed@s 0009  
                    ?_main 0055                      ?_init 0001            __end_of___awdiv 717C  
          __end_of___awmod 70D8                      p321@i 0053                      p321@j 0051  
          ___awdiv@divisor 0003                      _LATB0 007C50                      _LATB1 007C51  
                    _LATB2 007C52                      _LATB3 007C53                      _LATD0 007C60  
                    _LATB4 007C54                      _LATD1 007C61                      _LATB5 007C55  
                    _LATD2 007C62                      _LATB6 007C56                      _LATD3 007C63  
                    _LATB7 007C57                      _LATD4 007C64                      _LATD5 007C65  
                    _LATD6 007C66                      _LATD7 007C67            ___awdiv@counter 0005  
            __CFG_USBDIV$2 000000                 _DrawMatris 745E              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_FCMEN$OFF 000000                      _Out_B 717C  
                    _Out_D 7224           DrawMatris@matris 0003                      _feedx 005E  
                    _feedy 005F                      _snake 0060                      _start 005C  
                    main@t 00C1                      init@i 0008                      init@j 000A  
                    status 000FD8      __size_of_Delay1Second 0038               __end_of_p321 7CA0  
             __end_of_Draw 79EA            __initialization 6F74               __end_of_Move 76A4  
             __end_of_main 8000               __end_of_init 7804                     ??_p321 000D  
                   ??_Draw 0007                     ??_Move 0001                     ??_main 005A  
                   ??_init 0004              __activetblptr 000002                     ?_Out_B 0001  
                   ?_Out_D 0001                PlaceFeed@it 000D               _Delay1Second 6FB8  
         ___awdiv@dividend 0001                     p321@mm 0011         __size_of_Init_Game 0058  
                   Draw@it 0009         __size_of_PlaceFeed 00BE                     Move@nx 0004  
                   Move@ny 0006                     Out_B@o 0001                     Out_D@o 0001  
            main@loopCount 00BE                     ___wmul 6F92                  ??___awdiv 0005  
                ??___awmod 0005                     clear_0 6F7A           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                ?_DrawMatris 0003  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 6F88  
           __pcstackCOMRAM 0001              __end_of_Out_B 7224              __end_of_Out_D 72CC  
        __end_of_Init_Game 7048          __end_of_PlaceFeed 738A                    ??_Out_B 0002  
                  ??_Out_D 0002  __size_of_ControllForCrush 00D4                 __pbssBANK0 0060  
         _isRButtonPressed 00B9        __size_of_DrawMatris 0114                    ?___wmul 0007  
          __CFG_VREGEN$OFF 000000                    __Hparam 0000                    __Lparam 0000  
                  ___awdiv 70D8                    ___awmod 7048            __size_of___wmul 0026  
                  __pcinit 6F74                    __ramtop 0800                    __ptext0 7CA0  
                  __ptext1 79EA                    __ptext2 745E                    __ptext3 76A4  
                  __ptext4 6FB8                    __ptext5 6F92                    __ptext6 72CC  
                  __ptext7 70D8                    __ptext8 7572                    __ptext9 6FF0  
         ___awmod@dividend 0001       end_of_initialization 6F88              __Lmediumconst 0000  
           main@pseudoTime 00BF                    postinc0 000FEE                  _PORTCbits 000F82  
             ??_DrawMatris 0005                  _TRISBbits 000F93                  _TRISCbits 000F94  
                _TRISDbits 000F95           _ControllForCrush 738A           _isLButtonPressed 00B7  
       __end_of_DrawMatris 7572             __end_of___wmul 6FB8        start_initialization 6F74  
                _Init_Game 6FF0                  _PlaceFeed 72CC                   ??___wmul 000B  
          main@divConstant 00BB           main@loopConstant 00BC                __pbssCOMRAM 005C  
            __pcstackBANK0 00BB                 ?_Init_Game 0001                 ?_PlaceFeed 0009  
        _isRButtonPressing 00BA                   ?___awdiv 0001                   ?___awmod 0001  
           __size_of_Out_B 00A8             __size_of_Out_D 00A8              ?_Delay1Second 0001  
       ControllForCrush@it 000B             ___wmul@product 000B   __end_of_ControllForCrush 745E  
        ___wmul@multiplier 0007                ??_Init_Game 0001             ??_Delay1Second 0001  
              ??_PlaceFeed 000B                   Out_B@pin 0002                   Out_D@pin 0002  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___awdiv 00A4  
         __size_of___awmod 0090      __CFG_FOSC$INTOSCIO_EC 000000                   __ptext10 7804  
                 __ptext11 7224                   __ptext12 717C                   __ptext13 738A  
                 __ptext14 7048              __size_of_p321 02B6              __size_of_Draw 01E6  
            __size_of_Move 0132              __size_of_main 0360              __size_of_init 0160  
                 main@argc 0055                   main@argv 0057      __CFG_CPUDIV$OSC1_PLL2 000000  
     __end_of_Delay1Second 6FF0                DrawMatris@i 0009                DrawMatris@j 000B  
            Delay1Second@i 0002  
